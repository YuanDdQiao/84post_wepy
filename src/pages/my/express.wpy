<template>
  <view class="expressform">
    <view class="expressnumber">运单号：{{ expressNumber }}</view>
    <view>
      <block wx:if="{{ info.length !== 0}}">
        <block wx:for="{{ info }}" wx:key="id">
          <view class="type-{{ item.type }} oneline">
            <view class="info {{status === 3 ? 'got' : 'noget'}}">{{item.info}}</view>
            <view class="date">{{item.date}} {{item.time}}</view>
          </view>
        </block>
      </block>
      <block wx:else>
        还没有物流信息哦，估计是运输人员还没起床，请稍后再试 ( •̀ .̫ •́ )✧
      </block>
    </view>
    <view class="endnote">感谢您使用 84号邮局</view>
    <!--<form report-submit="True" @submit="bindNoSenseForm">-->
    <!--<button  formType="submit">按钮测试</button>-->
    <!--</form>-->
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'

  export default class extends wepy.page {
    /**
     * 页面配置对象，对应于原生的 page.json 文件
     */
    config = {
      navigationBarTitleText: '物流查询结果'
    }

    /**
     * 页面渲染数据对象，存放可用于页面模板绑定的渲染数据
     */
    data = {
      expressNumber: null,
      info: [],
      status: -1
    }

    /**
     * wxml 事件处理函数对象，存放响应 wxml 中所捕获到的事件的函数，如 bindtap、bindchange
     */
    methods = {
      // bindNoSenseForm(e) {
      //   api.formIdSubmit(e.detail.formId)
      // },
    }

    /**
     * WePY组件事件处理函数对象，存放响应组件之间通过 broadcast、emit、invoke所传递的事件的函数
     */
    events = {}

    /**
     * 生命周期函数--监听页面加载（一个页面只会调用一次）
     */
    async onLoad(options) {
      this.expressNumber = options.q
      if (!this.expressNumber) {
        await wepy.showModal({
          title: '参数错误',
          content: '未输入运单号',
          showCancel: false
        })
        wepy.reLaunch({ url: '/pages/my/index' })
      }

      let ret = await api.request(`my/query/${this.expressNumber}/`)
      if (ret.statusCode === 404) {
        this.info = [{
          type: 0,
          info: '运单不存在'
        }]
        this.status = 0
        this.$apply()
        await wepy.showModal({
          content: '该运单信息不存在',
          showCancel: false
        })
        wepy.redirectTo({ url: '/pages/my/query' })
      }
      console.log(ret.data)
      this.info = ret.data.info
      this.status = ret.data.status
      this.$apply()
    };

    /**
     * 生命周期函数--监听页面显示（每次打开页面都会调用一次）
     */
    async onShow() {
    };

    /**
     * 生命周期函数--监听页面初次渲染完成
     * 页面初次渲染完成 —— 一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互
     */
    async onReady() {
    };

    /**
     * 生命周期函数--监听页面隐藏（当 navigateTo 或底部 tab 切换时调用）
     */
    async onHide() {
    };

    /**
     * 生命周期函数--监听页面卸载（当 redirectTo 或 navigateBack 的时候调用）
     */
    async onUnload() {
    };

    /**
     * 页面相关事件处理函数--监听用户下拉动作
     */
    async onPullDownRefresh() {
    };

    /**
     * 页面上拉触底事件的处理函数
     */
    async onReachBottom() {
    };

    /**
     * 用户点击右上角分享
     */
    onShareAppMessage() {
      let userId = wepy.getStorageSync('userId')
      return {
        title: '物流信息',
        path: `/pages/my/express?fromUID=${userId}&q=${this.expressNumber}`,
        imageUrl: api.shareInfo.imageUrl
      }
    };
  }
</script>

<style lang="less">

  .expressform {
    width: ~"590rpx";
    margin-left: ~"40rpx";
    margin-right: ~"40rpx";
    padding-left: ~"40rpx";
    padding-right: ~"40rpx";
    text-align: center;
    margin-top: ~"40rpx";
    background: #FFFFFF;
    box-shadow: 0 2px 4px 0 #D4CEBE;
    margin-bottom: ~"40rpx";

  }

  .expressnumber {
    border-bottom: 2px #D0D0D0 dashed;
    height: 10vh;
    display: flex;
    flex-direction: row;
    align-items: center;
    margin-bottom: 4vh;
    font-size: ~"38rpx";
    justify-content: space-around;
    font-weight: bold;
    color: #797979;

  }

  .oneline {
    margin-bottom: 24px;
  }

  .info {
    color: #797979;
    font-size: ~"34rpx";
    margin-bottom: 4px;
    text-align: left;

  }

  .date {
    text-align: left;
    font-size: ~"32rpx";
    color: #A3A3A3;

  }

  .endnote {
    border-top: 2px #D0D0D0 dashed;
    height: 8vh;
    display: flex;
    flex-direction: row;
    align-items: center;
    margin-bottom: 4vh;
    font-size: ~"30rpx";
    justify-content: space-around;
    color: #797979;

  }

  .type-0 .info {

  }

  .type-1 .info {

  }

  .type-2 .info {

  }

  .type-3 .info {

  }

  .type-4 .info.got {
    /*已签收*/
  }

  .type-4 .info.noget {
    /*未签收*/
    font-weight: bold;
    color: #F17250;
  }

  .type-5 .info {
    color: #45AE45;
    font-weight: bold;
  }


</style>
