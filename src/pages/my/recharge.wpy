<template>
  <view>
    <view>
      <block wx:for="{{ price }}" wx:key="id">
        <button @tap="bindRecharge" session-from="recharge::{{ item.id }}"
                id="recharge-{{ item.id }}" data-id="{{item.id}}">
          <block wx:if="{{ item.featured_image }}">
            <view class="container image-container">
              <image src="{{ item.featured_image }}"></image>
            </view>
          </block>
          <block wx:else>
            <view class="container text-container">
              <view class="left">
                <view class="left">{{ item.point }}</view>
                <view class="right">点券</view>
              </view>
              <view class="right">¥ {{ item.price / 100}}</view>
            </view>
          </block>
        </button>
      </block>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'

  export default class extends wepy.page {
    /**
     * 页面配置对象，对应于原生的 page.json 文件
     */
    config = {
      navigationBarTitleText: '充值'
    }

    /**
     * 页面渲染数据对象，存放可用于页面模板绑定的渲染数据
     */
    data = {
      price: {}
    }

    /**
     * wxml 事件处理函数对象，存放响应 wxml 中所捕获到的事件的函数，如 bindtap、bindchange
     */
    methods = {
      // bindNoSenseForm(e) {
      //   api.formIdSubmit(e.detail.formId)
      // },
      async bindRecharge(e) {
        console.log(e.target.dataset.id)
        let response = await api.request({
          url: 'pay/wx/prepare/',
          data: {
            'price_id': e.target.dataset.id
          }
        })
        console.log(response.data)
        console.log(response.data['jsapi_param'])
        try {
          await wepy.requestPayment(response.data['jsapi_param'])
          wepy.navigateBack()
        } catch (e) {
          if (e.errMsg !== 'requestPayment:fail cancel') {
            console.error(e)
          }
        }
      }
    }

    /**
     * WePY组件事件处理函数对象，存放响应组件之间通过 broadcast、emit、invoke所传递的事件的函数
     */
    events = {}

    /**
     * 生命周期函数--监听页面加载（一个页面只会调用一次）
     */
    async onLoad() {
      let response = await api.request('pay/price/')
      this.price = response.data
      this.$apply()
    };

    /**
     * 生命周期函数--监听页面显示（每次打开页面都会调用一次）
     */
    async onShow() {
    };

    /**
     * 生命周期函数--监听页面初次渲染完成
     * 页面初次渲染完成 —— 一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互
     */
    async onReady() {
    };

    /**
     * 生命周期函数--监听页面隐藏（当 navigateTo 或底部 tab 切换时调用）
     */
    async onHide() {
    };

    /**
     * 生命周期函数--监听页面卸载（当 redirectTo 或 navigateBack 的时候调用）
     */
    async onUnload() {
    };

    /**
     * 页面相关事件处理函数--监听用户下拉动作
     */
    async onPullDownRefresh() {
    };

    /**
     * 页面上拉触底事件的处理函数
     */
    async onReachBottom() {
    };

    /**
     * 用户点击右上角分享
     */
    onShareAppMessage() {
      let userId = wepy.getStorageSync('userId')
      return {
        path: `/pages/my/recharge?fromUID=${userId}`,
        imageUrl: api.shareInfo.imageUrl
      }
    };
  }
</script>

<style lang="less">
  @import "../../images";

  .container {
    width: ~"664rpx";
    height: ~"216rpx";
    margin-top: ~"40rpx";

    &.image-container {
      image {
        width: ~"664rpx";
        height: ~"216rpx";
      }
    }

    &.text-container {
      background: url("https://84.singee.site/media/common-price/price_bg.png") center center no-repeat;
      background-size: ~"664rpx" ~"216rpx";

      display: flex;
      flex-direction: row;
      align-items: center;

      .left {
        margin-left: ~"52rpx";
        display: flex;
        flex-direction: row;
        align-items: left;

        .left {
          font-size: ~"106rpx";
          font-weight: bold;
          line-height: 1;
        }

        .right {
          font-size: ~"36rpx";
          font-weight: bold;
          writing-mode: vertical-lr;
        }
      }

      .right {
        margin-right: ~"64rpx";
        font-size: ~"50rpx";
        font-weight: bold;
        line-height: 1;
      }
    }

  }

  .note {
    font-size: ~"28rpx";
    text-align: center;
    margin-bottom: 2vh;
    margin-top: 6vh;
    color: gray;
  }

  .note2 {
    font-size: ~"28rpx";
    text-align: center;
    margin-bottom: 2vh;
    color: gray;
  }

  .endnote {
    font-size: ~"24rpx";
    line-height: 1.4;
    text-align: center;
    margin-top: 6vh;
    color: gray;
    height: 14vh;
  }

</style>
