<template>
  <view class="menulist">
    <!--<form report-submit="True" @submit="bindNoSenseForm">-->
    <!--<button  formType="submit">按钮测试</button>-->
    <!--</form>-->
    <!--<view>-->
    <!--充值方式一：保存下面的二维码到相册后使用微信扫一扫打开-->
    <!--&lt;!&ndash;<image></image>&ndash;&gt;-->
    <!--</view>-->
    <view>
      <view class="note">请点击下面的按钮后发送「充值」（充值二字已经为您复制）</view>
      <view>
        <block wx:for="{{ price }}" wx:key="id">
          <button class="rechargetype" open-type="contact" @contact="bindContact" session-from="recharge::{{ item.id }}"
                  id="recharge-{{ item.id }}">
            <view class="typename">¥{{ item.price / 100 }}</view>
            <view class="typeprice">充值 {{ item.point }} 点券</view>
            <view class="typenote">（其中充值点券 {{ item.point_paid }}，赠送点券 {{ item.point_gift }} ）</view>
          </button>
        </block>
      </view>
    </view>

    <view class="note">充值完成后一般即时到账。如果支付成功后超过1h仍旧未到账请发邮件给 imsingee@gmail.com 提供有关信息，我们将予以全额退款并赠送给您您充值的点券。</view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'

  export default class extends wepy.page {
    /**
     * 页面配置对象，对应于原生的 page.json 文件
     */
    config = {
      navigationBarTitleText: '充值'
    }

    /**
     * 页面渲染数据对象，存放可用于页面模板绑定的渲染数据
     */
    data = {
      price: {}
    }

    /**
     * wxml 事件处理函数对象，存放响应 wxml 中所捕获到的事件的函数，如 bindtap、bindchange
     */
    methods = {
      // bindNoSenseForm(e) {
      //   api.formIdSubmit(e.detail.formId)
      // },
      async bindContact(e) {
        console.log(e.target.id)
      }
    }

    /**
     * WePY组件事件处理函数对象，存放响应组件之间通过 broadcast、emit、invoke所传递的事件的函数
     */
    events = {}

    /**
     * 生命周期函数--监听页面加载（一个页面只会调用一次）
     */
    async onLoad() {
      let response = await api.request('pay/price/')
      this.price = response.data
      this.$apply()
      wepy.setClipboardData({
        data: '充值'
      })
    };

    /**
     * 生命周期函数--监听页面显示（每次打开页面都会调用一次）
     */
    async onShow() {
    };

    /**
     * 生命周期函数--监听页面初次渲染完成
     * 页面初次渲染完成 —— 一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互
     */
    async onReady() {
    };

    /**
     * 生命周期函数--监听页面隐藏（当 navigateTo 或底部 tab 切换时调用）
     */
    async onHide() {
    };

    /**
     * 生命周期函数--监听页面卸载（当 redirectTo 或 navigateBack 的时候调用）
     */
    async onUnload() {
    };

    /**
     * 页面相关事件处理函数--监听用户下拉动作
     */
    async onPullDownRefresh() {
    };

    /**
     * 页面上拉触底事件的处理函数
     */
    async onReachBottom() {
    };

    /**
     * 用户点击右上角分享
     */
    onShareAppMessage() {
      let userId = wepy.getStorageSync('userId')
      let imageUrl = `${api.host}/media/share/default.png`
      return {
        path: `/pages/write/index?fromUID=${userId}`,
        imageUrl: imageUrl
      }
    };
  }
</script>

<style lang="less">
  .menulist{
    width:670rpx;
    margin-left: 40rpx;
    margin-top: 40rpx;
    margin-right: 40rpx;
    /* background-color: gray; */

  }

  .note{
    font-size: 30rpx;
    text-align: center;
    margin-bottom: 2vh;
  }

  .rechargetype{
    margin-bottom:40rpx;
    background-color:white;
    border:2px #1562B3 dashed;
    padding-bottom:40rpx;

  }

  .rechargetype:after{
    border: none;
  }

  .typename{
    font-size: 48rpx;
    font-weight: bold;
    margin-top: 0;
    color: #052B53;
  }

  .typeprice{
    font-size: 30rpx;
    margin-top: -2vh;
    color:  #FF4A19;
  }

  .typenote{
    font-size: 34rpx;
    margin-top: 1.6vh;
  }
</style>
