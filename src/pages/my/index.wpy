<template>
  <view>
    <view>
      <text>点券</text>
      {{ balance }} 点券
      <form report-submit="True" @submit="bindRecharge">
        <button formType="submit">充值</button>
      </form>
    </view>
    <view>
      <text>信件</text>
      <form report-submit="True" @submit="bindNoSenseForm">

        <button formType="submit">
          <text>寄出的信</text>
          ->
        </button>
      </form>
      <form report-submit="True" @submit="bindNoSenseForm">

        <button formType="submit">
          <text>收到的信</text>
          ->
        </button>
      </form>
      <form report-submit="True" @submit="bindNoSenseForm">
        <button formType="submit">
          <text>根据运单号查询</text>
          ->
        </button>
      </form>
    </view>
    <view>
      <text>我的信息</text>
      <form report-submit="True" @submit="bindEditName">

        <button formType="submit">
          <text>称呼：{{ userInfo.name }}</text>
          ->
        </button>
      </form>
      <form report-submit="True" @submit="bindAddressChoose">

        <button formType="submit">
          <text>地址：{{ userInfo.address }}</text>
          ->
        </button>
      </form>
      <form report-submit="True" @submit="bindEditZipCode">

        <button formType="submit">
          <text>邮编：{{ userInfo.zipCode }}</text>
          ->
        </button>
      </form>
      <view>

        <button open-type='getPhoneNumber' @getphonenumber='bindGetPhoneNumber'>
          <text>手机号：{{ userInfo.tel }}</text>
          ->
        </button>
      </view>
      <form report-submit="True" @submit="bindNoSenseForm">

        <button formType="submit">
          <text>常用联系人</text>
          ->
        </button>
      </form>
    </view>
    <view wx-if="{{ canDebug }}">
      <text>调试面板</text>
      <form report-submit="True" @submit="bindStartDebug">

        <button formType="submit">
          <text>开启调试模式</text>
          ->
        </button>
      </form>
      <form report-submit="True" @submit="bindStopDebug">

        <button formType="submit">
          <text>关闭调试模式</text>
          ->
        </button>
      </form>
    </view>
    <!--<form report-submit="True" @submit="bindNoSenseForm">-->
    <!--<button  formType="submit">按钮测试</button>-->
    <!--</form>-->
  </view>
  <modal title="修改称呼" hidden="{{ nameModalHidden }}" @cancel="bindNameModalCancel"
         @confirm="bindNameModalConfirm">
    <form>
      你的名字
      <input type="text" value="{{ userInfo.raw.name }}" @input="bindNameModalInputChange"/>
    </form>
  </modal>
  <modal title="修改邮编" hidden="{{ zipCodeModalHidden }}" @cancel="bindZipCodeModalCancel"
         @confirm="bindzipCodeModalConfirm">
    <form>
      你的邮编
      <input type="digit" value="{{ userInfo.raw.zipCode }}" @input="bindZipCodeModalInputChange"/>
    </form>
  </modal>
</template>

<script>
  import wepy from 'wepy'
  import 'wepy-async-function'
  import api from '@/utils/api'

  export default class extends wepy.page {
    /**
     * 页面配置对象，对应于原生的 page.json 文件
     */
    config = {
      navigationBarTitleText: '我的',
      enablePullDownRefresh: true
    }

    /**
     * 页面渲染数据对象，存放可用于页面模板绑定的渲染数据
     */
    data = {
      balance: 0,
      userInfo: {},
      staff: false,
      canDebug: false,
      nameModalHidden: true,
      zipCodeModalHidden: true
    }

    /**
     * wxml 事件处理函数对象，存放响应 wxml 中所捕获到的事件的函数，如 bindtap、bindchange
     */
    methods = {
      bindNoSenseForm(e) {
        api.formIdSubmit(e.detail.formId)
      },
      bindRecharge(e) {
        api.formIdSubmit(e.detail.formId)
        // wepy.showModal({
        //   title: '提示',
        //   content: '充值功能暂未开放',
        //   showCancel: false
        // })
        wepy.navigateTo({
          url: '/pages/my/recharge'
        })
      },
      bindGetPhoneNumber(e) {
        api.request({
          url: 'user/tel/',
          method: 'POST',
          data: e.detail
        }).then(() => {
          this.onShow()
        })
      },
      // edit name
      bindEditName(e) {
        this.nameModalHidden = false
      },
      bindNameModalInputChange(e) {
        this.userInfo.raw.name = e.detail.value
      },
      bindNameModalCancel(e) {
        this.nameModalHidden = true
      },
      bindNameModalConfirm(e) {
        this.nameModalHidden = true
        api.request({
          url: 'user/name/',
          method: 'POST',
          data: {
            name: this.userInfo.raw.name
          }
        }).then(() => {
          this.onShow()
        })
      },
      // edit zip_code
      bindZipCodeModalInputChange(e) {
        this.userInfo.raw.zipCode = e.detail.value
      },
      bindZipCodeModalCancel(e) {
        this.zipCodeModalHidden = true
      },
      bindzipCodeModalConfirm(e) {
        this.zipCodeModalHidden = true
        api.request({
          url: 'user/zip_code/',
          method: 'POST',
          data: {
            zipCode: this.userInfo.raw.zipCode
          }
        }).then(e => {
          if (e.data.error) {
            wepy.showModal({
              title: '格式错误',
              content: '您的邮编格式错误，请修正后重试',
              showCancel: false
            })
          } else {
            this.onShow()
          }
        })
      },
      bindEditZipCode(e) {
        this.zipCodeModalHidden = false
      },
      async bindAddressChoose(e) {
        await api.getAuthScope('scope.userLocation')

        let res = await wepy.chooseLocation()

        // console.log(res)
        api.request({
          url: 'user/address/',
          method: 'POST',
          data: res
        }).then(
          this.onShow()
        )
      },
      async bindStartDebug(e) {
        api.startDebug()
      },
      async bindStopDebug(e) {
        api.stopDebug()
      }
    }

    /**
     * WePY组件事件处理函数对象，存放响应组件之间通过 broadcast、emit、invoke所传递的事件的函数
     */
    events = {}

    /**
     * 生命周期函数--监听页面加载（一个页面只会调用一次）
     */
    async onLoad() {
    };

    /**
     * 生命周期函数--监听页面显示（每次打开页面都会调用一次）
     */
    async onShow() {
      api.request('user/balance/').then((e) => {
        this.balance = e.data.balance
        this.$apply()
      })
      api.request('user/info/').then((e) => {
        let userInfo = {}
        let data = e.data

        userInfo.raw = {}
        userInfo.raw.name = data.name
        userInfo.raw.zipCode = data.zipCode
        userInfo.raw.tel = data.phoneNumber
        userInfo.raw.address = data.addressShort

        userInfo.name = data.name || '未填写'
        userInfo.zipCode = data.zipCode || '未填写'
        userInfo.tel = data.phoneNumber || '未填写'
        userInfo.address = data.addressShort || '未填写'

        this.userInfo = userInfo
        this.staff = data.staff
        this.canDebug = data.staff
        this.$apply()
      })
    };

    /**
     * 生命周期函数--监听页面初次渲染完成
     * 页面初次渲染完成 —— 一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互
     */
    async onReady() {
    };

    /**
     * 生命周期函数--监听页面隐藏（当 navigateTo 或底部 tab 切换时调用）
     */
    async onHide() {
    };

    /**
     * 生命周期函数--监听页面卸载（当 redirectTo 或 navigateBack 的时候调用）
     */
    async onUnload() {
    };

    /**
     * 页面相关事件处理函数--监听用户下拉动作
     */
    async onPullDownRefresh() {
      this.onShow()
      wepy.stopPullDownRefresh()
    };

    /**
     * 页面上拉触底事件的处理函数
     */
    async onReachBottom() {
    };

    /**
     * 用户点击右上角分享
     */
    onShareAppMessage() {
      let userId = wepy.getStorageSync('userId')
      let imageUrl = `${api.host}/media/share/default.png`
      return {
        path: `/pages/write/index?fromUID=${userId}`,
        imageUrl: imageUrl
      }
    };
  }
</script>

<style lang="less">

</style>
