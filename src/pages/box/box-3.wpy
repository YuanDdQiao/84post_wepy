<template>
  <view class="letter {{ pickUp.viewClass }}">
    <view class="textarea">{{ pickUp.content }}</view>
    <view class="sign">{{ pickUp.sign }}</view>
    <view class="date">{{ submitDate }}</view>
  </view>

  <view class="{{saveError ? 'error' : ''}} savenote">{{ saveMsg }}</view>

  <block wx:if="{{saved}}">
    <!--已经保存（挂号信/快递）-->
    <view class="buttons">
      <form report-submit="True" @submit="bindBack">
        <button formType="submit" class="btn">完成</button>
      </form>
      <view class="center-space"></view>
      <form report-submit="True" @submit="bindReply" wx:if="{{ pickUp.canReply }}">
        <button formType="submit" class="btn btn-primary">回复</button>
      </form>
    </view>

  </block>
  <block wx:else>
    <!--选择是否保存（平邮）-->
    <view class="buttons">
      <form report-submit @submit="bindSaveForm">
        <button class="btn btn-primary" formType="submit">我要咯</button>
      </form>
      <view class="center-space"></view>
      <form report-submit @submit="bindUnsaveForm">
        <button class="btn" formType="submit">塞回去</button>
      </form>
    </view>
  </block>
</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'
  import dayjs from 'dayjs'

  export default class extends wepy.page {
    /**
     * 页面配置对象，对应于原生的 page.json 文件
     */
    config = {
      navigationBarTitleText: '读信'
    }

    /**
     * 页面渲染数据对象，存放可用于页面模板绑定的渲染数据
     */
    data = {
      saved: false,
      saveMsg: '',
      pickUp: {},
      saveError: false,
      submitDate: ''
    }

    /**
     * wxml 事件处理函数对象，存放响应 wxml 中所捕获到的事件的函数，如 bindtap、bindchange
     */
    methods = {
      async bindSaveForm(e) {
        api.formIdSubmit(e.detail.formId)
        let ret = await api.request(`box/save/${this.pickUp.id}/`)
        this.saved = true
        this.saveMsg = '已经保存在我的信件'
        if (!ret.data.result) {
          this.saveError = true
          this.saveMsg = '信件保存失败（可能已经被取）'
        }
        this.$apply()
      },
      bindUnsaveForm(e) {
        api.formIdSubmit(e.detail.formId)
        wepy.navigateBack()
      },
      bindBack(e) {
        wepy.reLaunch({ url: '/pages/box/index' })
      },
      async bindReply(e) {
        let ret = await api.request(`letter/address/${this.pickUp.id}/`)
        api.request(`letter/mark/replied/${this.pickUp.id}/`)
        console.log(ret)
        wepy.setStorageSync('letterInfo-shiftInfo-fromName', ret.data.to_name)
        wepy.setStorageSync('letterInfo-shiftInfo-fromTel', ret.data.to_tel)
        wepy.setStorageSync('letterInfo-shiftInfo-fromAddress', ret.data.to_address)
        wepy.setStorageSync('letterInfo-shiftInfo-fromZip', ret.data.to_zip)
        wepy.setStorageSync('letterInfo-shiftInfo-toName', ret.data.from_name)
        wepy.setStorageSync('letterInfo-shiftInfo-toTel', ret.data.from_tel)
        wepy.setStorageSync('letterInfo-shiftInfo-toAddress', ret.data.from_address)
        wepy.setStorageSync('letterInfo-shiftInfo-toZip', ret.data.from_zip)
        wepy.reLaunch({ url: '/pages/write/index' })
      }
    }

    /**
     * WePY组件事件处理函数对象，存放响应组件之间通过 broadcast、emit、invoke所传递的事件的函数
     */
    events = {}

    /**
     * 生命周期函数--监听页面加载（一个页面只会调用一次）
     */
    async onLoad(options) {
      this.pickUp = this.$parent.globalData.pickUp
      this.saved = this.pickUp.saved
      if (this.saved) {
        this.saveMsg = '已经保存在我的信件'
      } else {
        this.saveMsg = '请选择是否保存信件'
      }
      // let submitTime = new Date(this.pickUp.submitTime)
      // this.submitDate = `${submitTime.getFullYear()}-${submitTime.getMonth() + 1}-${submitTime.getDate()}`
      this.submitDate = dayjs(this.pickUp.submitTime).format('YYYY-MM-DD')
      this.$apply()
      console.log(this.pickUp)
      this.$parent.globalData.pickUp = {} // 清理之前保存的信息
    };

    /**
     * 生命周期函数--监听页面显示（每次打开页面都会调用一次）
     */
    async onShow() {
    };

    /**
     * 生命周期函数--监听页面初次渲染完成
     * 页面初次渲染完成 —— 一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互
     */
    async onReady() {
    };

    /**
     * 生命周期函数--监听页面隐藏（当 navigateTo 或底部 tab 切换时调用）
     */
    async onHide() {
    };

    /**
     * 生命周期函数--监听页面卸载（当 redirectTo 或 navigateBack 的时候调用）
     */
    async onUnload() {
    };

    /**
     * 页面相关事件处理函数--监听用户下拉动作
     */
    async onPullDownRefresh() {
    };

    /**
     * 页面上拉触底事件的处理函数
     */
    async onReachBottom() {
    };

    /**
     * 用户点击右上角分享
     */
    onShareAppMessage() {
      let userId = wepy.getStorageSync('userId')
      return {
        title: api.shareInfo.boxTitle,
        path: `/pages/box/index?fromUID=${userId}`,
        imageUrl: api.shareInfo.imageUrl
      }
    };
  }
</script>

<style lang="less">
  .error {
    color: red;
  }

  .buttons {
    display: flex;
    flex-direction: row;
    align-items: center;

    .center-space {
      flex-grow: 1;
    }
  }

  .letter {
    margin: 0 ~"15rpx";
    min-height: calc(~"100vh - 2 * 45rpx - 2 * 15rpx - 92rpx - 28rpx - 2 * 64rpx - 60rpx");
    position: relative;
    padding: ~"40rpx";

    .textarea {
      text-align: left;
      font-size: ~"30rpx";
      line-height: 2;
      white-space: pre-wrap;
    }

    .date, .sign {
      font-size: ~"30rpx";
      line-height: 2;
      text-align: right;
    }

    &.view-letter-01 {
      background: #FCF7E8;
      border: 2px solid #E5DCC2;
      outline: 6px solid #FCF7E8;
      box-shadow: 0 4px 10px 0 rgba(160, 147, 105, 1);

      .textarea,
      .sign,
      .date {
        color: #6E5F31;
      }
    }

    &.view-letter-02 {
      background: #FFFFFF;
      border: 3px double #FBBAD0;
      border-radius: 6px;
      box-shadow: 0 4px 10px 0 rgba(160, 147, 105, 0.2);
      color: #6E1A36;

      .textarea,
      .sign,
      .date {
        color: #6E1A36;
      }
    }

    &.view-letter-03 {
      background: #F3F2F0;
      border: 2px dashed #1562B3;
      outline: 6px solid #F3F2F0;
      box-shadow: 0 4px 20px 0 #a09369;
      color: #052B53;

      .textarea,
      .sign,
      .date {
        color: #052B53;
      }
    }
  }

  .savenote {
    margin: ~"64rpx" 0;
    text-align: center;
    font-size: ~"30rpx";
    color: gray;
  }

</style>
