<template>
  <view>
    <view class="{{ pickUp.viewClass }}" style="{{ pickUp.viewStyle }}">
      <view class="textarea">{{ pickUp.content }}</view>
      <view class="sign">{{ pickUp.sign }}</view>
      <view class="date">{{ submitDate }}</view>
    </view>

    <block wx:if="{{saved}}">
      <!--已经保存（非挂号信）-->
      <view class="{{saveError ? 'error' : ''}} savenote">{{ saveMsg }}</view>
      <form report-submit="True" @submit="bindReply" wx:if="{{ pickUp.canReply }}">
        <button formType="submit">回复</button>
      </form>
      <form report-submit="True" @submit="bindBack">
        <button formType="submit">完成</button>
      </form>
    </block>
    <block wx:else>
      <!--选择是否保存（挂号信）-->
      <view>
        <form report-submit @submit="bindSaveForm">
          <button class="confirmbutton" formType="submit">我要咯</button>
        </form>
        <form report-submit @submit="bindUnsaveForm">
          <button class="lastbutton" formType="submit">塞回去</button>
        </form>
      </view>
    </block>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'
  import dayjs from 'dayjs'

  export default class extends wepy.page {
    /**
     * 页面配置对象，对应于原生的 page.json 文件
     */
    config = {
      navigationBarTitleText: '阅读信件'
    }

    /**
     * 页面渲染数据对象，存放可用于页面模板绑定的渲染数据
     */
    data = {
      saved: false,
      saveMsg: '已经保存在我的信件',
      pickUp: {},
      saveError: false,
      submitDate: ''
    }

    /**
     * wxml 事件处理函数对象，存放响应 wxml 中所捕获到的事件的函数，如 bindtap、bindchange
     */
    methods = {
      async bindSaveForm(e) {
        api.formIdSubmit(e.detail.formId)
        let ret = await api.request(`box/save/${this.pickUp.id}/`)
        this.saved = true
        if (!ret.data.result) {
          this.saveError = true
          this.saveMsg = '信件保存失败（可能已经被取）'
        }
        this.$apply()
      },
      bindUnsaveForm(e) {
        api.formIdSubmit(e.detail.formId)
        wepy.navigateBack()
      },
      bindBack(e) {
        wepy.reLaunch({ url: '/pages/box/index' })
      },
      async bindReply(e) {
        let ret = await api.request(`letter/address/${this.pickUp.id}/`)
        api.request(`letter/mark/replied/${this.pickUp.id}/`)
        console.log(ret)
        wepy.setStorageSync('letterInfo-shiftInfo-fromName', ret.data.to_name)
        wepy.setStorageSync('letterInfo-shiftInfo-fromTel', ret.data.to_tel)
        wepy.setStorageSync('letterInfo-shiftInfo-fromAddress', ret.data.to_address)
        wepy.setStorageSync('letterInfo-shiftInfo-fromZip', ret.data.to_zip)
        wepy.setStorageSync('letterInfo-shiftInfo-toName', ret.data.from_name)
        wepy.setStorageSync('letterInfo-shiftInfo-toTel', ret.data.from_tel)
        wepy.setStorageSync('letterInfo-shiftInfo-toAddress', ret.data.from_address)
        wepy.setStorageSync('letterInfo-shiftInfo-toZip', ret.data.from_zip)
        wepy.reLaunch({ url: '/pages/write/index' })
      }
    }

    /**
     * WePY组件事件处理函数对象，存放响应组件之间通过 broadcast、emit、invoke所传递的事件的函数
     */
    events = {}

    /**
     * 生命周期函数--监听页面加载（一个页面只会调用一次）
     */
    async onLoad(options) {
      this.pickUp = this.$parent.globalData.pickUp
      this.saved = this.pickUp.saved
      // let submitTime = new Date(this.pickUp.submitTime)
      // this.submitDate = `${submitTime.getFullYear()}-${submitTime.getMonth() + 1}-${submitTime.getDate()}`
      this.submitDate = dayjs(this.pickUp.submitTime).format('YYYY-MM-DD')
      this.$apply()
      console.log(this.pickUp)
      this.$parent.globalData.pickUp = {} // 清理之前保存的信息
    };

    /**
     * 生命周期函数--监听页面显示（每次打开页面都会调用一次）
     */
    async onShow() {
    };

    /**
     * 生命周期函数--监听页面初次渲染完成
     * 页面初次渲染完成 —— 一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互
     */
    async onReady() {
    };

    /**
     * 生命周期函数--监听页面隐藏（当 navigateTo 或底部 tab 切换时调用）
     */
    async onHide() {
    };

    /**
     * 生命周期函数--监听页面卸载（当 redirectTo 或 navigateBack 的时候调用）
     */
    async onUnload() {
    };

    /**
     * 页面相关事件处理函数--监听用户下拉动作
     */
    async onPullDownRefresh() {
    };

    /**
     * 页面上拉触底事件的处理函数
     */
    async onReachBottom() {
    };

    /**
     * 用户点击右上角分享
     */
    onShareAppMessage() {
      let userId = wepy.getStorageSync('userId')
      return {
        title: api.shareInfo.boxTitle,
        path: `/pages/box/index?fromUID=${userId}`,
        imageUrl: api.shareInfo.imageUrl
      }
    };
  }
</script>

<style lang="less">
  .error {
    color: red;
  }

  button {
    position: relative;
    margin-top: ~"40rpx";
    width: 60vw;

  }

  .confirmbutton {
    color: white;
    background-color: #F17250;
    margin-top: ~"80rpx";
  }

  .view-letter-01 {
    background: #FCF7E8;
    border: 2px solid #E5DCC2;
    outline: 6px solid #FCF7E8;
    box-shadow: 0 4px 10px 0 rgba(160, 147, 105, 1);
    width: ~"660rpx";
    margin-right: ~"40rpx";
    margin-left: ~"40rpx";
    padding: 0;
    color: #6E5F31;
    margin-top: ~"40rpx";
  }

  .view-letter-02 {
    background: #FFFFFF;
    border: 3px double #FBBAD0;
    border-radius: 6px;
    box-shadow: 0 4px 10px 0 rgba(160, 147, 105, 0.2);
    width: ~"660rpx";
    margin-right: ~"40rpx";
    margin-left: ~"40rpx";
    padding: 0;
    color: #6E1A36;
    margin-top: ~"40rpx";
  }

  .view-letter-03 {
    background: #F3F2F0;
    border: 2px dashed #1562B3;
    outline: 6px solid #F3F2F0;
    box-shadow: 0 4px 20px 0 #a09369;
    width: ~"660rpx";
    margin-right: ~"40rpx";
    margin-left: ~"40rpx";
    padding: 0;
    color: #052B53;
    margin-top: ~"40rpx";
  }

  .textarea {
    padding-left: ~"40rpx";
    padding-right: ~"40rpx";
    padding-top: ~"40rpx";
    padding-bottom: 0;
    width: ~"584rpx";
    font-size: ~"30rpx";
    line-height: ~"60rpx";
    margin-bottom: 40px;
    white-space: pre-wrap;
  }

  .date, .sign {
    font-size: ~"30rpx";
    margin-bottom: 18px;
    margin-right: ~"60rpx";
    text-align: right;
  }

  .sign {
    margin-bottom: 0;
  }

  .savenote {
    margin-top: 32px;
    text-align: center;
    font-size: ~"30rpx";
    margin-bottom: 35px;
    color: gray;

  }

  .lastbutton {
    margin-bottom: ~"80rpx";
  }

</style>
