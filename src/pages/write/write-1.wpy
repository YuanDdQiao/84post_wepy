<template>
  <view>
    <view class="processbarholder">
      <view class="progress processdone">写</view>
      <view class="progress-middle">选</view>
      <view class="progress">寄</view>
    </view>
    <view class="{{ paperType.edit_class_attr }} godown" style="{{ paperType.edit_style_attr }}">
      <form report-submit="True" @submit="bindSubmit">
        <view class="noteanddone">
          <view class="autosavenote">已自动保存草稿</view>
          <button formType="submit">写好了</button>
        </view>
        <textarea class="godown" @input="bindInput" placeholder="{{ placeHolderText }}" value="{{ inputValue }}"
                  maxlength="{{ maxLength }}" fixed="true"></textarea>
        <view class="dateandword">
          <view>{{ wordCount }}/{{ maxLength }} 字</view>
          <view>{{ todayDate }}</view>
        </view>
      </form>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'

  export default class extends wepy.page {
    /**
     * 页面配置对象，对应于原生的 page.json 文件
     */
    config = {
      navigationBarTitleText: '写信'
    }

    /**
     * 页面渲染数据对象，存放可用于页面模板绑定的渲染数据
     */
    data = {
      placeHolderText: '写下想要说的……',
      wordCount: 0,
      minLength: 1,
      maxLength: 2000,
      inputValue: '',
      todayDate: '',
      paperType: {}
    }

    /**
     * wxml 事件处理函数对象，存放响应 wxml 中所捕获到的事件的函数，如 bindtap、bindchange
     */
    methods = {
      bindSubmit(e) {
        api.formIdSubmit(e.detail.formId)
        this.$parent.globalData.letterInfo.content = this.inputValue
        if (this.inputValue.length === 0) {
          wepy.showModal({
            title: '嘤嘤嘤',
            content: '你还没填内容呢伦家不接收空白的信件嘛QAQ',
            showCancel: false
          })
          wepy.pageScrollTo({
            scrollTop: 0
          })
        } else if (this.inputValue.length > this.maxLength) {
          wepy.showModal({
            title: '嘤嘤嘤',
            content: '你写的内容太多了伦家拿不动嘛QAQ',
            showCancel: false
          })
          wepy.pageScrollTo({
            scrollTop: 0
          })
        } else if (this.inputValue.length < this.minLength) {
          wepy.showModal({
            title: '嘤嘤嘤',
            content: '你写的太少了伦家不想跑嘛QAQ',
            showCancel: false
          })
          wepy.pageScrollTo({
            scrollTop: 0
          })
        } else {
          this.$apply()
          wepy.navigateTo({
            url: 'write-2'
          })
        }
      },
      bindInput(e) {
        this.inputValue = e.detail.value
        this.wordCount = e.detail.value.length
        this.$apply()
        wepy.setStorage({
          key: 'letterContent',
          data: this.inputValue
        })
      }
    }

    /**
     * WePY组件事件处理函数对象，存放响应组件之间通过 broadcast、emit、invoke所传递的事件的函数
     */
    events = {}

    /**
     * 生命周期函数--监听页面加载（一个页面只会调用一次）
     */
    async onLoad(options) {
      let d = new Date()
      this.todayDate = `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`
      this.$apply()
    };

    /**
     * 生命周期函数--监听页面显示（每次打开页面都会调用一次）
     */
    async onShow() {
      this.paperType = this.$parent.globalData.letterInfo.paperType
      try {
        let res = await wepy.getStorage({ key: 'letterContent' })
        this.inputValue = res.data
      } catch (e) {
        this.inputValue = ''
      }
      this.wordCount = this.inputValue.length
      this.$apply()
      api.request('global/letter_max_length/').then(e => {
        this.maxLength = parseInt(e.data.value)
        this.$apply()
      })
      api.request('global/letter_min_length/').then(e => {
        this.minLength = parseInt(e.data.value)
        this.$apply()
      })
    };

    /**
     * 生命周期函数--监听页面初次渲染完成
     * 页面初次渲染完成 —— 一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互
     */
    async onReady() {
    };

    /**
     * 生命周期函数--监听页面隐藏（当 navigateTo 或底部 tab 切换时调用）
     */
    async onHide() {
    };

    /**
     * 生命周期函数--监听页面卸载（当 redirectTo 或 navigateBack 的时候调用）
     */
    async onUnload() {
    };

    /**
     * 页面相关事件处理函数--监听用户下拉动作
     */
    async onPullDownRefresh() {
    };

    /**
     * 页面上拉触底事件的处理函数
     */
    async onReachBottom() {
    };

    /**
     * 用户点击右上角分享
     */
    onShareAppMessage() {
      let userId = wepy.getStorageSync('userId')
      return {
        title: api.shareInfo.title,
        path: `/pages/write/index?fromUID=${userId}`,
        imageUrl: api.shareInfo.imageUrl
      }
    };
  }
</script>

<style lang="less">
  .edit-letter-01{
    background:#FCF7E8;
    border:2px solid #E5DCC2;
    outline:6px solid #FCF7E8;
    box-shadow:0 4px 10px 0 #a09369;
    width:660rpx;
    height:86vh;
    margin-right:40rpx;
    margin-left:40rpx;
    padding:0;
    color:#6E5F31;
    display:flex;
    flex-direction:column;
    align-items:center;
    margin-top:110rpx;

  }

  .edit-letter-01 ::selection {
    background: #DED8C6;
  }

  .edit-letter-02{
    background: #FFFFFF;
    border: 3px solid #FBBAD0;
    border-style: double;
    border-radius: 8px;
    box-shadow: 0 4px 10px 0 rgba(160,147,105,0.2);
    width:660rpx;
    height:86vh;
    margin-right:40rpx;
    margin-left:40rpx;
    padding: 0;
    color:#6E1A36;
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top:110rpx;
  }

  .edit-letter-02 ::selection {
    background: #FAE8EE;
  }

  .edit-letter-03{
    background: #F3F2F0;
    border: 2px solid #1562B3;
    border-style: dashed;
    outline: 6px solid #F3F2F0;
    box-shadow: 0 4px 10px 0 rgba(160,147,105,1);
    width:660rpx;
    height:87vh;
    margin-right:40rpx;
    margin-left:40rpx;
    padding: 0;
    color:#052B53;
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top:110rpx;
  }

  .edit-letter-03 ::selection {
    background: #DBDAD8;
  }

  button{
    float:right;
    height:4vh;
    display:flex;
    flex-direction:column;
    justify-content:space-around;
    align-items:center;
    font-size:24rpx;
    font-weight:bold;
    margin-right:1vh;


  }

  .edit-letter-01 button{
    background-color: #9E9477;
    color: #FCF7E8;
  }

  .edit-letter-02 button{
    background-color: #DA6D92;
    color: #FFFFFF;
  }

  .edit-letter-03 button{
    background-color: #09427F;
    color: #F3F2F0;
  }

  button:after{
    border: none;
  }

  textarea{
    position: fixed;
    padding-left: 40rpx;
    padding-right: 40rpx;
    padding-top: 10rpx;
    padding-bottom: 0;
    height:72vh;
    width:584rpx;
    font-size: 32rpx;
    line-height: 60rpx;

  }

  .edit-letter-01 textarea{
    border-bottom: 1px #E5DCC2 dashed;
    border-top: 1px #E5DCC2 dashed;

  }

  .edit-letter-02 textarea{
    border-bottom: 1px #FFD8E5 dashed;
    border-top: 1px #FFD8E5 dashed;

  }

  .edit-letter-03 textarea{
    border-bottom: 1px #BAC7D5 dashed;
    border-top: 1px #BAC7D5 dashed;

  }

  .dateandword{
    font-size:28rpx;
    margin-left:auto;
    margin-right:auto;
    height:7vh;
    width:584rpx;
    display:flex;
    flex-direction:row;
    justify-content:space-between;
    align-items:center;
    margin-bottom:1vh;
    margin-top:73vh;



  }

  .noteanddone{
    height:7vh;
    padding:0;
    width:660rpx;
    display:flex;
    flex-direction:row;
    align-items:center;
  }
  .autosavenote{
    padding-left:40rpx;
    display:inline;
    font-size:28rpx;
    color:gray;
  }
  .godown{
    position: fixed;
  }

</style>
