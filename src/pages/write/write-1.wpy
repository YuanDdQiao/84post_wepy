<template>
  <indicator status="1" ></indicator>
  <view class="indicator-space6">
    <view class="edit-letter-common {{ paperType.edit_class_attr }} godown" style="{{ paperType.edit_style_attr }}">
      <form report-submit="True" @submit="bindSubmit">
        <view class="noteanddone">
          <view class="autosavenote">已自动保存草稿</view>
          <button class="btn-complete" formType="submit">写好了</button>
        </view>
        <textarea class="godown" @input="bindInput" placeholder="{{ placeHolderText }}" value="{{ inputValue }}"
                  maxlength="{{ maxLength }}" fixed="true"></textarea>
        <input type="text" class="sign" value="{{ sign }}" @input="bindSign" placeholder="落款签名"/>
        <view class="dateandword">
          <view class="words">{{ wordCount }}/{{ maxLength }} 字</view>
          <view class="date">{{ todayDate }}</view>
        </view>
      </form>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'
  import Indicator from '@/components/indicator'

  export default class extends wepy.page {
    /**
     * 页面配置对象，对应于原生的 page.json 文件
     */
    config = {
      navigationBarTitleText: '写信'
    }

    /**
     * 页面渲染数据对象，存放可用于页面模板绑定的渲染数据
     */
    data = {
      placeHolderText: '写下想要说的……',
      wordCount: 0,
      minLength: 1,
      maxLength: 2000,
      inputValue: '',
      todayDate: '',
      paperType: {},
      sign: ''
    }

    components = {
      indicator: Indicator
    }

    /**
     * wxml 事件处理函数对象，存放响应 wxml 中所捕获到的事件的函数，如 bindtap、bindchange
     */
    methods = {
      bindSubmit(e) {
        api.formIdSubmit(e.detail.formId)
        this.$parent.globalData.letterInfo.content = this.inputValue
        this.$parent.globalData.letterInfo.sign = this.sign
        if (this.inputValue.length === 0) {
          wepy.showModal({
            title: '此处无字胜有字',
            content: '您还没有填写内容',
            showCancel: false
          })
          wepy.pageScrollTo({
            scrollTop: 0
          })
        } else if (this.inputValue.length > this.maxLength) {
          wepy.showModal({
            title: '字数过多',
            content: '最多字数 2000 字，克制很重要',
            showCancel: false
          })
          wepy.pageScrollTo({
            scrollTop: 0
          })
        } else if (this.inputValue.length < this.minLength) {
          wepy.showModal({
            title: '奇了怪了',
            content: '你是不是把我们的代码给删了？',
            showCancel: false
          })
          wepy.pageScrollTo({
            scrollTop: 0
          })
        } else {
          this.$apply()
          console.log(this.$parent.globalData.letterInfo)
          wepy.navigateTo({
            url: 'write-2'
          })
        }
      },
      bindInput(e) {
        this.inputValue = e.detail.value
        this.wordCount = e.detail.value.length
        this.$apply()
        wepy.setStorage({
          key: 'letterContent',
          data: this.inputValue
        })
      },
      bindSign(e) {
        this.sign = e.detail.value
        wepy.setStorage({
          key: 'letterSign',
          data: this.sign
        })
      }
    }

    /**
     * WePY组件事件处理函数对象，存放响应组件之间通过 broadcast、emit、invoke所传递的事件的函数
     */
    events = {}

    /**
     * 生命周期函数--监听页面加载（一个页面只会调用一次）
     */
    async onLoad(options) {
      let d = new Date()
      this.todayDate = `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`
      this.$apply()
    };

    /**
     * 生命周期函数--监听页面显示（每次打开页面都会调用一次）
     */
    async onShow() {
      this.paperType = this.$parent.globalData.letterInfo.paperType
      try {
        let res = await wepy.getStorage({ key: 'letterContent' })
        this.inputValue = res.data
      } catch (e) {
        this.inputValue = ''
      }
      try {
        let res = await wepy.getStorage({ key: 'letterSign' })
        this.sign = res.data
      } catch (e) {
        this.sign = ''
      }
      this.wordCount = this.inputValue.length
      this.$apply()
      api.request('global/letter_max_length/').then(e => {
        this.maxLength = parseInt(e.data.value)
        this.$apply()
      })
      api.request('global/letter_min_length/').then(e => {
        this.minLength = parseInt(e.data.value)
        this.$apply()
      })
    };

    /**
     * 生命周期函数--监听页面初次渲染完成
     * 页面初次渲染完成 —— 一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互
     */
    async onReady() {
    };

    /**
     * 生命周期函数--监听页面隐藏（当 navigateTo 或底部 tab 切换时调用）
     */
    async onHide() {
    };

    /**
     * 生命周期函数--监听页面卸载（当 redirectTo 或 navigateBack 的时候调用）
     */
    async onUnload() {
    };

    /**
     * 页面相关事件处理函数--监听用户下拉动作
     */
    async onPullDownRefresh() {
    };

    /**
     * 页面上拉触底事件的处理函数
     */
    async onReachBottom() {
    };

    /**
     * 用户点击右上角分享
     */
    onShareAppMessage() {
      let userId = wepy.getStorageSync('userId')
      return {
        title: api.shareInfo.title,
        path: `/pages/write/index?fromUID=${userId}`,
        imageUrl: api.shareInfo.imageUrl
      }
    };
  }
</script>

<style lang="less">

  .edit-letter-common {
    display: flex;
    flex-direction: column;
    align-items: center;

    /*margin: ~"110rpx" ~"40rpx" auto ~"40rpx";*/
    padding: 0;
    margin: 0;

    width: ~"660rpx";
    height: calc(~"100vh - 186rpx");
  }

  .edit-letter-01 {
    /*暖阳*/
    @bg_color: #FCF7E8;

    background: @bg_color;
    border: 2px solid #E5DCC2;
    outline: 6px solid @bg_color;
    box-shadow: 0 1px 10px 3px #a09369;
    color: #6E5F31;

    &::selection {
      background: #DED8C6;
    }

    button {
      background-color: #9E9477;
      color: @bg_color;
      padding-left: ~"20rpx";
      padding-right: ~"20rpx";
      margin-right: ~"20rpx";
    }

    textarea {
      border-bottom: 1px #E5DCC2 dashed;
      border-top: 1px #E5DCC2 dashed;
    }

    .date {
      color: #6E5F31;
    }

    .words {
      color: #6E5F31;
    }
  }

  .edit-letter-02 {
    /*蠢白*/
    @bg_color: #FFFFFF;

    background: @bg_color;
    border: 3px double #FBBAD0;
    border-radius: 8px;
    box-shadow: 0 2px 4px 1px rgba(160, 147, 105, 0.2);
    color: #6E1A36;

    &::selection {
      background: #FAE8EE;
    }

    button {
      background-color: #DA6D92;
      color: @bg_color;
      padding-left: ~"20rpx";
      padding-right: ~"20rpx";
      margin-right: ~"20rpx";
    }

    textarea {
      border-bottom: 1px #FFD8E5 dashed;
      border-top: 1px #FFD8E5 dashed;
    }

    .date {
      color: #6E1A36;
    }

    .words {
      color: #6E1A36;
    }
  }

  .edit-letter-03 {
    /*八十四*/

    background: #F3F2F0;
    border: 2px dashed #1562B3;
    outline: 6px solid #F3F2F0;
    box-shadow: 0 2px 8px 4px #a09369;
    color: #052B53;

    &::selection {
      background: #DBDAD8;
    }

    button {
      background-color: #09427F;
      color: #F3F2F0;
      padding-left: ~"20rpx";
      padding-right: ~"20rpx";
      margin-right: ~"20rpx";
    }

    textarea {
      border-bottom: 1px #BAC7D5 dashed;
      border-top: 1px #BAC7D5 dashed;
    }

    .date {
      color: #052B53;
    }

    .words {
      color: #052B53;
    }
  }

  .edit-letter-04 {
    /*微甜青橘*/
    background-image: linear-gradient(-180deg, #FFF3D8 0%, #E1FFDD 97%);
    border: 12px solid rgba(255, 255, 255, 0.98);
    box-shadow: 0 4px 12px 0 rgba(160, 147, 105, 0.2);
    border-radius: 6px;
    color: #9DA36F;
    width:calc(~"660rpx - 24px");
    height: calc(~"100vh - 186rpx - 24px");

    &::selection {
      background: #DFE4BC;
    }

    button {
      background-color: #9DA36F;
      color: #FEF3D9;
      padding-left: ~"20rpx";
      padding-right: ~"20rpx";
      margin-right: ~"40rpx";
    }

    textarea {
      border-bottom: 3px #C7E6BA dashed;
      border-top: 3px #EFD9A7 dashed;
    }

    .date {
      color: #9DA36F;
    }

    .words {
      color: #9DA36F;
    }
  }

  .btn-complete {
    float: right;
    height: 4vh;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
    font-size: ~"24rpx";
    font-weight: bold;
    margin-right: 1vh;
  }

  textarea {
    position: fixed;
    padding: ~"20rpx" ~"40rpx";
    height: calc(~"100vh - 92rpx - 90rpx - 92rpx - 80rpx - 108rpx - 10rpx");
    width: ~"584rpx";
    font-size: ~"32rpx";
    line-height: ~"60rpx";
    text-align: left;
  }

  .sign {
    position: fixed;
    bottom: ~"108rpx";
    right: ~"43rpx";
    text-align: right;
    font-size: ~"32rpx";
    line-height: ~"60rpx";
    padding-right: ~"40rpx";
    margin-bottom: ~"10rpx";
  }

  .dateandword {
    font-size: ~"28rpx";
    position: fixed;
    bottom: ~"70rpx";
    padding: 0;
    width: ~"660rpx";
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    margin-bottom:~"10rpx";


    .date {
      margin-right: ~"40rpx";
    }

    .words {
      margin-left: ~"40rpx";
    }

  }

  .noteanddone {
    height: ~"92rpx";
    padding: 0;
    width: ~"660rpx";
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
  }

  .autosavenote {
    margin-left: ~"40rpx";
    display: inline;
    font-size: ~"28rpx";
    color: gray;
  }

  .godown {
    position: fixed;
  }

</style>
