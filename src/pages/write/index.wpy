<template>
  <view>
    <swiper @change="bindSwiperCurrentChange">
      <swiper-item item-id="1001" class="show-border">
        <view>
          这里有一些话 - 01
          <text>{{ todayDate }}</text>

        </view>
      </swiper-item>

      <swiper-item item-id="1002" class="show-border">
        <view>
          这里有一些话 - 02
          <text>{{ todayDate }}</text>

        </view>
      </swiper-item>

      <swiper-item item-id="1003" class="show-border">
        <view>
          这里有一些话 - 03
          <text>{{ todayDate }}</text>

        </view>
      </swiper-item>

    </swiper>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'

  export default class extends wepy.page {
    /**
     * 页面配置对象，对应于原生的 page.json 文件
     */
    config = {
      navigationBarTitleText: '84号邮局'
    }

    /**
     * 页面渲染数据对象，存放可用于页面模板绑定的渲染数据
     */
    data = {
      todayDate: ''
    }

    /**
     * wxml 事件处理函数对象，存放响应 wxml 中所捕获到的事件的函数，如 bindtap、bindchange
     */
    methods = {
      // bindNoSenseForm(e) {
      //   api.formIdSubmit(e.detail.formId)
      // },
      bindSwiperCurrentChange(e) {
        console.log(e.detail.current)
      }
    }

    /**
     * WePY组件事件处理函数对象，存放响应组件之间通过 broadcast、emit、invoke所传递的事件的函数
     */
    events = {}

    /**
     * 生命周期函数--监听页面加载（一个页面只会调用一次）
     */
    async onLoad() {
    };

    /**
     * 生命周期函数--监听页面显示（每次打开页面都会调用一次）
     */
    async onShow() {
      let d = new Date()
      this.todayDate = `${d.getFullYear()}-${d.getMonth()}-${d.getDate()}`
      this.$apply()
    };

    /**
     * 生命周期函数--监听页面初次渲染完成
     * 页面初次渲染完成 —— 一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互
     */
    async onReady() {
    };

    /**
     * 生命周期函数--监听页面隐藏（当 navigateTo 或底部 tab 切换时调用）
     */
    async onHide() {
    };

    /**
     * 生命周期函数--监听页面卸载（当 redirectTo 或 navigateBack 的时候调用）
     */
    async onUnload() {
    };

    /**
     * 页面相关事件处理函数--监听用户下拉动作
     */
    async onPullDownRefresh() {
    };

    /**
     * 页面上拉触底事件的处理函数
     */
    async onReachBottom() {
    };

    /**
     * 用户点击右上角分享
     */
    async onShareAppMessage() {
    };
  }
</script>

<style lang="less">
  .show-border {
    border: red solid 3px;
  }

</style>
