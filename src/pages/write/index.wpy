<template>
  <view class="fixed">
    <view class="indicator">
      <view class="item{{ item.id === paperType.currentItemId ? ' chosen' : ''}} heavyfont"
            wx:for="{{ paperType.types }}"
            wx:key="id" data-id="{{ item.id }}" @tap="bindChoosePaperType">{{ item.name }}
      </view>
    </view>
    <view class="indicator-space8 more-space writeindex-space">
      <view class="writeIndexError" wx:if="writeIndexError">{{ writeIndexError }}</view>
      <block wx:for="{{ paperType.types }}" wx:key="id" wx:for-item="type">
        <swiper class="paperselector" @change="bindSwiperCurrentChange" current-item-id="{{ paper.currentItemId }}"
                indicator-dots indicator-color="rgba(0,0,0,.2)" indicator-active-color="rgba(0,0,0,.5)"
                wx:if="{{ type.id === paperType.currentItemId }}">
          <swiper-item item-id="{{ item.id }}" class="papers" wx:for="{{ type.papers }}" wx:key="id">
            <view class="paper {{ item.class_attr }}">
              <view class="demotext textcolor">{{ item.demo_text }}</view>
              <view class="todaydate textcolor">{{ todayDate }}</view>
            </view>
            <!-- <view class="papername">{{ item.name }}</view> -->
          </swiper-item>
        </swiper>
      </block>

    </view>

    <form report-submit="True" @submit="bindStartWriting">
      <button formType="submit" class="btn btn-primary btn-center">就选它</button>
    </form>

  </view>


</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'

  export default class extends wepy.page {
    /**
     * 页面配置对象，对应于原生的 page.json 文件
     */
    config = {
      navigationBarTitleText: '选择信纸'
    }

    /**
     * 页面渲染数据对象，存放可用于页面模板绑定的渲染数据
     */
    data = {
      paperType: {
        types: [],
        currentItem: {},
        currentItemId: 0
      },
      paper: {
        currentItem: {},
        currentItemId: 0
      },
      todayDate: '',
      writeIndexError: ''
    }

    /**
     * wxml 事件处理函数对象，存放响应 wxml 中所捕获到的事件的函数，如 bindtap、bindchange
     */
    methods = {
      bindStartWriting(e) {
        api.formIdSubmit(e.detail.formId)
        this.$parent.globalData.letterInfo.paperType = this.paper.currentItem
        console.log('this.$parent.globalData', this.$parent.globalData)
        wepy.navigateTo({
          url: 'write-1'
        })
      },
      bindSwiperCurrentChange(e) {
        // 更换信纸选择
        console.log(e)
        // 获取当前 item-id
        this.paper.currentItemId = parseInt(e.detail.currentItemId)
        // 获取当前 item
        this.paper.currentItem = this.paperType.currentItem.papers.find(p => p.id === this.paper.currentItemId) || {}
        // 保存
        wepy.setStorage({
          key: 'letterInfo-paperId',
          data: this.paper.currentItemId
        })
        console.log('this.paper.currentItem', this.paper.currentItem)
        this.$apply()
      },
      async bindChoosePaperType(e) {
        // 选择信纸类型
        console.log(e)
        this.paperType.currentItemId = parseInt(e.currentTarget.dataset.id) // 信纸类型ID
        this.paperType.currentItem = this.paperType.types.find(t => t.id === this.paperType.currentItemId) || {} // 信纸类型 Object
        // 保存信纸类型选择信息（letterInfo-paperTypeId）
        wepy.setStorage({
          key: 'letterInfo-paperTypeId',
          data: this.paperType.currentItemId
        })
        this.$apply()
        // 重新初始化信纸选择
        this.initPaperId()
      }
    }

    /**
     * WePY组件事件处理函数对象，存放响应组件之间通过 broadcast、emit、invoke所传递的事件的函数
     */
    events = {}

    /**
     * 生命周期函数--监听页面加载（一个页面只会调用一次）
     */
    async onLoad(options) {
      // writeIndexError
      this.writeIndexError = this.$parent.globalData.writeIndexError
      this.$parent.globalData.writeIndexError = ''
      // 日期
      let d = new Date()
      this.todayDate = `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`
      this.$apply()
    };

    /**
     * 生命周期函数--监听页面显示（每次打开页面都会调用一次）
     */
    async onShow() {
      // 获取信纸类型
      await this.getPaperTypes()
      // 初始化信纸
      await this.initPaperId()
    };

    /**
     * 用户点击右上角分享
     */
    onShareAppMessage() {
      let userId = wepy.getStorageSync('userId')
      return {
        title: api.shareInfo.title,
        path: `/pages/write/index?fromUID=${userId}`,
        imageUrl: api.shareInfo.imageUrl
      }
    };

    async getPaperTypes() {
      // 获取信纸类型
      let r = await api.request('letter/paper/type/', false)
      console.log(r)
      // 全部类型（含信纸）
      this.paperType.types = r.data.filter(t => {
        console.log('t', t)
        // 筛选出 enabled 信纸
        t.papers = t.papers.filter(p => p.enabled)
        // 筛选出类别不为空的类别
        return (t.papers.length > 0)
      })

      // 初始化信纸类型
      try {
        // 尝试获取保存的 paperTypeId
        let v = await wepy.getStorage({
          key: 'letterInfo-paperTypeId'
        })
        // 成功获取 -> 赋值
        this.paperType.currentItemId = parseInt(v.data)
      } catch (e) {
        // 并未保存过 paperTypeId
        console.log('No storage for letterInfo-paperTypeId')
        // 第一个作为 item-id
        this.paperType.currentItemId = parseInt(this.paperType.types[0].id)
      }
      let findResult = this.paperType.types.find(p => p.id === this.paperType.currentItemId)

      if (findResult) {
        // id 正确 -> 赋值
        this.paperType.currentItem = findResult
      } else {
        // id 错误 -> 重置
        this.paperType.currentItemId = parseInt(this.paperType.types[0].id)
        this.paperType.currentItem = this.paperType.types[0]
      }

      this.$apply()
    }

    async initPaperId() {
      // 初始化信纸
      console.log('this.paperType.types', this.paperType.types)
      console.log('this.paperType.currentItemId', this.paperType.currentItemId)
      // let q = this.paperType.types.find(p => p.id === this.paperType.currentItemId)
      // 获取现在的信纸类别
      let paperTypeItem = this.paperType.currentItem
      console.log('this.paperType.currentItem', paperTypeItem)

      // 获取当前缓存到的信纸
      try {
        // 尝试获取保存的 paperId
        let v = await wepy.getStorage({
          key: 'letterInfo-paperId'
        })
        // 成功获取 -> 保存值
        let itemId = parseInt(v.data)
        // 从当前类别的信纸中查找
        let item = paperTypeItem.papers.find(p => p.id === itemId)
        console.log('paperTypeItem.papers.find(p => p.id === itemId)', item)
        // 切换至当前列表第一位
        this.paper.currentItem = paperTypeItem.papers[0]
        this.paper.currentItemId = this.paper.currentItem.id
        // 清除保存的 paperId 记录
        wepy.removeStorage({
          key: 'letterInfo-paperId'
        })
        // if (item) {
        //   // 当前类别列表能找到 -> 切换到这个类别
        //   this.paper.currentItem = item
        //   this.paper.currentItemId = item.id
        // } else {
        //   // 找不到 -> 切换至当前类别列表第一位
        //   this.paper.currentItem = paperTypeItem.papers[0]
        //   this.paper.currentItemId = this.paper.currentItem.id
        //   // 清除当前 paperId 记录
        //   wepy.removeStorage({
        //     key: 'letterInfo-paperId'
        //   })
        // }
      } catch (e) {
        // 并未保存过 paperId -> 切换至当前类别列表第一位
        console.log('No storage for letterInfo-paperId')
        this.paper.currentItem = this.paperType.currentItem.papers[0]
        this.paper.currentItemId = this.paper.currentItem.id
      }

      this.$apply()
    }
  }
</script>

<style lang="less">
  @import "../../colors";
  @import "../../images";

  page {
    padding-left: 0;
    padding-right: 0;
    width: ~"750rpx";
  }

  .fixed {
    position: fixed;
    top: ~"137rpx";
    width: 100%;
    height: calc(~"100vh - 30rpx");
  }

  .indicator {
    .item {
      flex-grow: 1;
      color: @weak-text-color;

      &.chosen {
        color: @complete-color;
      }
    }
  }

  .paper {
    margin: 0 ~"60rpx";
    padding: ~"40rpx";
    height: calc(~"100vh - 2 * 60rpx - 107rpx - 92rpx - 190rpx");
    position: relative;

    &.paper-01 {
      /* 暖阳 */
      background: #FCF7E8;
      border: 2px solid #E5DCC2;
      outline: 6px solid #FCF7E8;
      box-shadow: 0 4px 10px 2px rgb(174, 145, 77);
      height: calc(~"100vh - 2 * 60rpx - 107rpx - 92rpx - 190rpx - 10rpx");
      font-size: ~"32rpx";

      .textcolor {
        color: #6E5F31 !important;
      }
    }

    &.paper-02 {
      /* 蠢白 */
      background: #FFFFFF;
      border: 3px double #FBBAD0;
      border-radius: 6px;
      box-shadow: 0 4px 10px 0 rgba(160, 147, 105, 0.2);
      color: #6E1A36 !important;
      font-size: ~"32rpx";

      .textcolor {
        color: #6E1A36 !important;
      }
    }

    &.paper-03 {
      /* 八十四 */
      margin-top: ~"10rpx";
      background: #F3F2F0;
      border: 2px dashed #1562B3;
      outline: 6px solid #F3F2F0;
      box-shadow: 0 4px 10px 4px rgba(160, 147, 105, 0.6);

      height: calc(~"100vh - 2 * 60rpx - 107rpx - 92rpx - 190rpx - 18rpx");
      font-size: ~"32rpx";

      .textcolor {
        color: #052B53 !important;
      }
    }

    &.paper-04 {
      /* 微甜青橘 */

      background-image: linear-gradient(-180deg, #FFF3D8 0%, #E1FFDD 97%);
      border: 12px solid rgba(255, 255, 255, 0.98);
      height: calc(~"100vh - 2 * 60rpx - 107rpx - 92rpx - 190rpx - 30rpx");
      box-shadow: 0 4px 12px 0 rgba(160, 147, 105, 0.2);
      border-radius: 6px;

      .textcolor {
        color: #9DA36F !important;
      }
    }

    &.paper-05 {
      /* 青田 */

      box-shadow: 0 4px 8px 0 rgba(201, 190, 159, 0.5);
      border-radius: 8px;
      font-size: ~"32rpx";
      height: calc(~"100vh - 2 * 60rpx - 107rpx - 92rpx - 190rpx + 20rpx");
      background: #FBFEF7 url(@paper-qingtian) space;
      background-size: cover;

      .textcolor {
        color: #89C076 !important;
      }
    }

    &.paper-06 {
      /* 奥德赛 */
      box-shadow: 0 4px 14px 0 rgba(95, 148, 205, 0.7);
      border-radius: 2px;
      color: #F3F3F4 !important;
      font-size: ~"32rpx";
      background: #2C3A55 url(@paper-aodesai) space;
      background-size: cover;
      height: calc(~"100vh - 2 * 60rpx - 107rpx - 92rpx - 190rpx + 24rpx");

      .textcolor {
        color: #F3F3F4 !important;
      }
    }

    .demotext {
      white-space: pre-wrap;
      text-align: left;
      line-height: ~"60rpx";
    }

    .todaydate {
      text-align: right;
      position: absolute;
      bottom: 0;
      right: 0;
      margin: ~"40rpx";
      /*position: relative;*/
      /*bottom: 7vh;*/
      /*left: ~"400rpx";*/
      /*font-size: ~"30rpx";*/
    }
  }

  .paperselector {
    height: calc(~"100vh - 2 * 60rpx - 107rpx - 92rpx");
    /*margin-bottom: ~"146rpx";*/

    .wx-swiper-dots.wx-swiper-dots-horizontal {
    }
  }

  .papername {
    font-size: ~"30rpx";
    margin-top: ~"40rpx";
    color: gray;
    text-align: center;

  }

  .writeIndexError {
    text-align: center;
    color: white;
    background-color: rgba(255, 14, 14, 0.75);
    font-size: ~"30rpx";
  }


</style>
