<template>
  <view class="fixed">
    <view class="indicator">
      <view class="item{{ item.id === paperType.currentItemId ? ' chosen' : ''}} heavyfont" wx:for="{{ paperType.types }}"
            wx:key="id" data-id="{{ item.id }}" @tap="bindChoosePaperType">{{ item.name }}
      </view>
    </view>
    <view class="indicator-space8 more-space writeindex-space">
      <!--<view class="writeIndexError" wx:if="writeIndexError">{{ writeIndexError }}</view>-->
      <block wx:for="{{ paperType.types }}" wx:key="id" wx:for-item="type">
        <swiper class="paperselector" @change="bindSwiperCurrentChange" current-item-d="{{ paper.currentItemId }}"
                indicator-dots indicator-color="rgba(0,0,0,.2)" indicator-active-color="rgba(0,0,0,.5)"
                wx:if="{{ type.id === paperType.currentItemId }}">
          <swiper-item item-id="{{ item.id }}" class="papers" wx:for="{{ type.papers }}" wx:key="id">
            <view class="paper {{ item.class_attr }}">
              <view class="demotext textcolor">{{ item.demo_text }}</view>
              <view class="todaydate textcolor">{{ todayDate }}</view>
            </view>
            <!-- <view class="papername">{{ item.name }}</view> -->
          </swiper-item>
        </swiper>
      </block>

    </view>

    <form report-submit="True" @submit="bindStartWriting">
      <button formType="submit" class="btn btn-primary btn-center">就选它</button>
    </form>

  </view>


</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'

  export default class extends wepy.page {
    /**
     * 页面配置对象，对应于原生的 page.json 文件
     */
    config = {
      navigationBarTitleText: '选择信纸'
    }

    /**
     * 页面渲染数据对象，存放可用于页面模板绑定的渲染数据
     */
    data = {
      paperType: {
        types: [],
        currentItem: {},
        currentItemId: 0
      },
      paper: {
        currentItem: {},
        currentItemId: 0
      },
      todayDate: '',
      writeIndexError: ''
    }

    /**
     * wxml 事件处理函数对象，存放响应 wxml 中所捕获到的事件的函数，如 bindtap、bindchange
     */
    methods = {
      bindStartWriting(e) {
        api.formIdSubmit(e.detail.formId)
        // console.log(this.current)
        // console.log(this.currentItem.id)
        this.$parent.globalData.letterInfo.paperType = this.paper.currentItem
        // wepy.setStorage({
        //   key: 'letterInfo-paperType',
        //   data: this.currentItem
        // })
        console.log('this.$parent.globalData', this.$parent.globalData)
        wepy.navigateTo({
          url: 'write-1'
        })
      },
      bindSwiperCurrentChange(e) {
        console.log(e)
        this.paper.currentItemId = parseInt(e.detail.currentItemId)
        console.log('this.paper.currentItemId', this.paper.currentItemId)
        console.log('this.paperType.currentItem.papers', this.paperType.currentItem.papers)
        console.log('this.paper.currentItemId', this.paper.currentItemId)
        this.paper.currentItem = this.paperType.currentItem.papers.find(p => p.id === this.paper.currentItemId) || {}
        console.log('this.paper.currentItem', this.paper.currentItem)
        this.$apply()
      },
      async bindChoosePaperType(e) {
        console.log(e)
        this.paperType.currentItemId = parseInt(e.currentTarget.dataset.id)
        this.paperType.currentItem = this.paperType.types.find(t => t.id === this.paperType.currentItemId) || {}
        this.$apply()
        this.initPaperId()
      }
    }

    /**
     * WePY组件事件处理函数对象，存放响应组件之间通过 broadcast、emit、invoke所传递的事件的函数
     */
    events = {}

    /**
     * 生命周期函数--监听页面加载（一个页面只会调用一次）
     */
    async onLoad(options) {
      // writeIndexError
      this.writeIndexError = this.$parent.globalData.writeIndexError
      this.$parent.globalData.writeIndexError = ''
      // 日期
      let d = new Date()
      this.todayDate = `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`
      this.$apply()
    };

    /**
     * 生命周期函数--监听页面显示（每次打开页面都会调用一次）
     */
    async onShow() {
      await this.getPaperTypes()
      await this.initPaperId()
      // // 获取信纸
      // let res = await api.request('letter/paper/', false)
      // this.papers = res.data
      // 选择信纸
      // try {
      //   let v = await wepy.getStorage({
      //     key: 'letterInfo-paperType'
      //   })
      //   this.currentItemId = v.data.id
      //
      //   let pci = this.papers.find(p => p.id === this.currentItemId)
      //   if (pci) {
      //     this.currentItem = pci
      //     this.currentItemId = this.currentItem.id
      //   } else {
      //     console.log('No id for letterInfo-paperType')
      //     this.currentItem = this.papers[0]
      //     this.currentItemId = this.currentItem.id
      //   }
      // } catch (e) {
      //   console.log('No storage for letterInfo-paperType')
      //   this.currentItem = this.papers[0]
      //   this.currentItemId = this.currentItem.id
      // }
    };

    /**
     * 用户点击右上角分享
     */
    onShareAppMessage() {
      let userId = wepy.getStorageSync('userId')
      return {
        title: api.shareInfo.title,
        path: `/pages/write/index?fromUID=${userId}`,
        imageUrl: api.shareInfo.imageUrl
      }
    };

    async getPaperTypes() {
      // 获取信纸类型
      let r = await api.request('letter/paper/type/', false)
      console.log(r)
      this.paperType.types = r.data

      // 选择信纸类型
      this.paperType.currentItemId = parseInt(r.data[0].id)
      this.paperType.currentItem = this.paperType.types.find(p => p.id === this.paperType.currentItemId) || {}
      console.log('this.paperType.currentItemId', this.paperType.currentItemId)
      console.log('this.paperType.currentItem', this.paperType.currentItem)
      this.$apply()
    }

    async initPaperId() {
      console.log('this.paperType.types', this.paperType.types)
      console.log('this.paperType.currentItemId', this.paperType.currentItemId)
      // let q = this.paperType.types.find(p => p.id === this.paperType.currentItemId)
      let q = this.paperType.currentItem
      console.log(q)
      if (q && q.papers[0]) {
        this.paper.currentItemId = q.papers[0].id
        this.paper.currentItem = this.paperType.currentItem.papers.find(p => p.id === this.paper.currentItemId)
      } else {
        this.paper.currentItemId = 0
      }
      this.$apply()
    }
  }
</script>

<style lang="less">
  @import "../../colors";

  page {
    padding-left: 0;
    padding-right: 0;
    width: ~"750rpx";
  }

  .fixed{
    position: fixed;
    top: ~"137rpx";
    width: 100%;
    height: calc(~"100vh - 30rpx");
  }

  .indicator {
    .item {
      flex-grow: 1;
      color: @weak-text-color;

      &.chosen {
        color: @complete-color;
      }
    }
  }

  .paper {
    margin: 0 ~"60rpx";
    padding: ~"40rpx";
    height: calc(~"100vh - 2 * 60rpx - 107rpx - 92rpx - 190rpx");
    position: relative;

    &.paper-01 {
      /* 暖阳 */
      background: #FCF7E8;
      border: 2px solid #E5DCC2;
      outline: 6px solid #FCF7E8;
      box-shadow: 0 4px 10px 2px rgba(160, 147, 105, 1);

      font-size: ~"32rpx";

      .textcolor{
        color: #6E5F31 !important;
      }
    }

    &.paper-02 {
      /* 蠢白 */
      background: #FFFFFF;
      border: 3px double #FBBAD0;
      border-radius: 6px;
      box-shadow: 0 4px 10px 0 rgba(160, 147, 105, 0.2);
      color: #6E1A36 !important;
      font-size: ~"32rpx";

      .textcolor{
        color: #6E1A36 !important;
      }
    }

    &.paper-03 {
      /* 八十四 */
      background: #F3F2F0;
      border: 2px dashed #1562B3;
      outline: 6px solid #F3F2F0;
      box-shadow: 0 2px 10px 4px rgba(160, 147, 105, 1);
      font-size: ~"32rpx";

      .textcolor{
        color: #052B53 !important;
      }
    }

    .demotext {
      white-space: pre-wrap;
      text-align: left;
      line-height: ~"60rpx";
    }

    .todaydate {
      text-align: right;
      position: absolute;
      bottom: 0;
      right: 0;
      margin: ~"40rpx";
      /*position: relative;*/
      /*bottom: 7vh;*/
      /*left: ~"400rpx";*/
      /*font-size: ~"30rpx";*/
    }
  }

  .paperselector {
    height: calc(~"100vh - 2 * 60rpx - 107rpx - 92rpx");
    /*margin-bottom: ~"146rpx";*/

    .wx-swiper-dots.wx-swiper-dots-horizontal {
    }
  }

  .papername {
    font-size: ~"30rpx";
    margin-top: ~"40rpx";
    color: gray;
    text-align: center;

  }

  .writeIndexError {
    text-align: center;
    color: white;
    background-color: rgba(255, 14, 14, 0.75);
    font-size: ~"30rpx";
  }


</style>
