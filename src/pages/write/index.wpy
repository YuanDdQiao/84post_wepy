<template>
  <view class="indicator">
    <view class="item{{ item.id === paperType.currentItemId ? ' chosen' : ''}}" wx:for="{{ paperType.types }}"
          wx:key="id" data-id="{{ item.id }}" @tap="bindChoosePaperType">{{ item.name }}
    </view>
  </view>
  <view class="gofix">
    <view class="writeIndexError" wx:if="writeIndexError">{{ writeIndexError }}</view>
    <view class="choosepapernote">滑动选择信纸</view>
    <swiper class="paperselector" @change="bindSwiperCurrentChange" current-item-id="{{ currentItemId }}">

      <block wx:for="{{ paper.showPapers }}" wx:key="id">
        <swiper-item item-id="{{ item.id }}" class="papers">
          <view class="{{ item.class_attr }}" style="{{ item.style_attr }}">
            <view class="demotext">{{ item.demo_text }}</view>
            <view class="todaydate">{{ todayDate }}</view>
          </view>
          <!-- <view class="papername">{{ item.name }}</view> -->
        </swiper-item>
      </block>

    </swiper>

  </view>

  <form report-submit="True" @submit="bindStartWriting">
    <button formType="submit" class="btn btn-primary confirmPaper">就选它</button>
  </form>

</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'

  export default class extends wepy.page {
    /**
     * 页面配置对象，对应于原生的 page.json 文件
     */
    config = {
      navigationBarTitleText: '选择信纸'
    }

    /**
     * 页面渲染数据对象，存放可用于页面模板绑定的渲染数据
     */
    data = {
      paperType: {
        types: [],
        currentItemId: 0
      },
      paper: {
        papers: [],
        showPapers: [],
        currentItemId: 0
      },
      todayDate: '',
      papers: {},
      current: 0,
      currentItem: {},
      currentItemId: -1,
      writeIndexError: ''
    }

    /**
     * wxml 事件处理函数对象，存放响应 wxml 中所捕获到的事件的函数，如 bindtap、bindchange
     */
    methods = {
      bindStartWriting(e) {
        api.formIdSubmit(e.detail.formId)
        // console.log(this.current)
        // console.log(this.currentItem.id)
        this.$parent.globalData.letterInfo.paperType = this.currentItem
        wepy.setStorage({
          key: 'letterInfo-paperType',
          data: this.currentItem
        })
        wepy.navigateTo({
          url: 'write-1'
        })
      },
      bindSwiperCurrentChange(e) {
        this.current = e.detail.current
        this.currentItem = this.papers[this.current]
      },
      async bindChoosePaperType(e) {
        console.log(e)
        this.paperType.currentItemId = parseInt(e.currentTarget.dataset.id)
        this.$apply()
        this.setShowPapers()
      }
    }

    /**
     * WePY组件事件处理函数对象，存放响应组件之间通过 broadcast、emit、invoke所传递的事件的函数
     */
    events = {}

    /**
     * 生命周期函数--监听页面加载（一个页面只会调用一次）
     */
    async onLoad(options) {
      // writeIndexError
      this.writeIndexError = this.$parent.globalData.writeIndexError
      this.$parent.globalData.writeIndexError = ''
      // 日期
      let d = new Date()
      this.todayDate = `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`
      this.$apply()
    };

    /**
     * 生命周期函数--监听页面显示（每次打开页面都会调用一次）
     */
    async onShow() {
      await this.getPaperTypes()
      await this.getPapers()
      await this.setShowPapers()
      // // 获取信纸
      // let res = await api.request('letter/paper/', false)
      // this.papers = res.data
      // 选择信纸
      // try {
      //   let v = await wepy.getStorage({
      //     key: 'letterInfo-paperType'
      //   })
      //   this.currentItemId = v.data.id
      //
      //   let pci = this.papers.find(p => p.id === this.currentItemId)
      //   if (pci) {
      //     this.currentItem = pci
      //     this.currentItemId = this.currentItem.id
      //   } else {
      //     console.log('No id for letterInfo-paperType')
      //     this.currentItem = this.papers[0]
      //     this.currentItemId = this.currentItem.id
      //   }
      // } catch (e) {
      //   console.log('No storage for letterInfo-paperType')
      //   this.currentItem = this.papers[0]
      //   this.currentItemId = this.currentItem.id
      // }
    };

    /**
     * 用户点击右上角分享
     */
    onShareAppMessage() {
      let userId = wepy.getStorageSync('userId')
      return {
        title: api.shareInfo.title,
        path: `/pages/write/index?fromUID=${userId}`,
        imageUrl: api.shareInfo.imageUrl
      }
    };

    async getPaperTypes() {
      // 获取信纸类型
      let r = await api.request('letter/paper/type/', false)
      console.log(r)
      this.paperType.types = r.data

      // 选择信纸类型
      this.paperType.currentItemId = r.data[0].id
      this.$apply()
    }

    async getPapers() {
      // 获取信纸
      let r = await api.request('letter/paper/', false)
      console.log(r)
      this.paper.papers = r.data

      // 选择信纸
      this.paper.currentItemId = r.data[0].id
      this.$apply()
    }

    async setShowPapers() {
      this.paper.showPapers = this.paper.papers.filter(p => p.type.find(t => t.id === this.paperType.currentItemId))
      this.$apply()
    }
  }
</script>

<style lang="less">
  @import "../../colors";

  .indicator {
    .item {
      flex-grow: 1;
      color: @weak-text-color;

      &.chosen {
        color: @complete-color;
      }
    }
  }

  button.confirmPaper {
    position: fixed;
    bottom: ~"144rpx";
    left: ~"226rpx";
  }

  .papers {
    /* border: red 2px solid; */
    padding: ~"20rpx";
    width: ~"690rpx" !important;
    margin-left: ~"40rpx";
    margin-right: ~"40rpx";
  }

  /*button {*/
  /*color: white;*/
  /*width: 60vw;*/
  /*background-color: #F17250;*/
  /*}*/

  .choosepapernote {
    text-align: center;
    font-size: ~"38rpx";
    margin-top: 2vh;
    color: gray;
    height: 8vh;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-around;

  }

  .paper-01 {
    /* 暖阳 */
    background: #FCF7E8;
    border: 2px solid #E5DCC2;
    outline: 6px solid #FCF7E8;
    box-shadow: 0 4px 10px 0 rgba(160, 147, 105, 1);
    width: ~"550rpx";
    height: 64vh;
    color: #6E5F31;
    font-size: ~"32rpx";
    padding: ~"40rpx";
  }

  .paper-02 {
    /* 蠢白 */
    background: #FFFFFF;
    border: 3px solid #FBBAD0;
    border-style: double;
    border-radius: 6px;
    box-shadow: 0 4px 10px 0 rgba(160, 147, 105, 0.2);
    width: ~"550rpx";
    height: 64vh;
    color: #6E1A36;
    font-size: ~"32rpx";
    padding: ~"40rpx";
  }

  .paper-03 {
    /* 八十四 */
    background: #F3F2F0;
    border: 2px solid #1562B3;
    border-style: dashed;
    outline: 6px solid #F3F2F0;
    box-shadow: 0 4px 10px 0 rgba(160, 147, 105, 1);
    width: ~"550rpx";
    height: 64vh;
    color: #052B53;
    font-size: ~"32rpx";
    padding: ~"40rpx";
  }

  .paperselector {
    height: 78vh;
    margin-left: 0;
    margin-right: 0;
    padding-left: 0;
    padding-right: 0;
    padding-bottom: ~"10rpx";
    width: ~"750rpx";
  }

  .papername {
    font-size: ~"30rpx";
    margin-top: ~"40rpx";
    color: gray;
    text-align: center;

  }

  .demotext {
    white-space: pre-wrap;
    height: 68vh;
    line-height: ~"60rpx";
  }

  .writeIndexError {
    text-align: center;
    color: white;
    background-color: rgba(255, 14, 14, 0.75);
    font-size: ~"30rpx";
  }

  .todaydate {
    position: relative;
    bottom: 7vh;
    left: ~"400rpx";
    font-size: ~"30rpx";

  }

  .gofix {
    position: fixed;
  }


</style>
