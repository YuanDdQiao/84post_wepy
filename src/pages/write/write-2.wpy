<template>
  <view>
    <view class="processbarholder ">

      <view class="progress processdone">写</view>
      <view class="progress-middle processdone">选</view>
      <view class="progress">寄</view>
    </view>
    <block wx:for="{{ letterTypes }}" wx:key="id">
      <form report-submit="True" @submit="bindSubmit">
        <button class="typechoose" formType="submit" id="{{ index }}">
          <view class="typename">{{ item.name }}</view>
          <view class="typeprice">
            <block wx:if="{{ item.price === 0}}">免费</block>
            <block wx:else>{{ item.price }} 点券</block>
          </view>
          <view class="typenote">{{ item.describe }}</view>
        </button>
      </form>
    </block>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'

  export default class extends wepy.page {
    /**
     * 页面配置对象，对应于原生的 page.json 文件
     */
    config = {
      navigationBarTitleText: '选择类型'
    }

    /**
     * 页面渲染数据对象，存放可用于页面模板绑定的渲染数据
     */
    data = {
      letterTypes: []
    }

    /**
     * wxml 事件处理函数对象，存放响应 wxml 中所捕获到的事件的函数，如 bindtap、bindchange
     */
    methods = {
      bindSubmit(e) {
        api.formIdSubmit(e.detail.formId)
        this.$parent.globalData.letterInfo.letterType = this.letterTypes[e.detail.target.id]
        console.log(this.$parent.globalData.letterInfo)
        wepy.navigateTo({
          url: 'write-3'
        })
      }
    }

    /**
     * WePY组件事件处理函数对象，存放响应组件之间通过 broadcast、emit、invoke所传递的事件的函数
     */
    events = {}

    /**
     * 生命周期函数--监听页面加载（一个页面只会调用一次）
     */
    async onLoad() {
      let ret = await api.request('letter/type/')

      this.letterTypes = ret.data
      this.$apply()
    };

    /**
     * 生命周期函数--监听页面显示（每次打开页面都会调用一次）
     */
    async onShow() {
    };

    /**
     * 生命周期函数--监听页面初次渲染完成
     * 页面初次渲染完成 —— 一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互
     */
    async onReady() {
    };

    /**
     * 生命周期函数--监听页面隐藏（当 navigateTo 或底部 tab 切换时调用）
     */
    async onHide() {
    };

    /**
     * 生命周期函数--监听页面卸载（当 redirectTo 或 navigateBack 的时候调用）
     */
    async onUnload() {
    };

    /**
     * 页面相关事件处理函数--监听用户下拉动作
     */
    async onPullDownRefresh() {
    };

    /**
     * 页面上拉触底事件的处理函数
     */
    async onReachBottom() {
    };

    /**
     * 用户点击右上角分享
     */
    onShareAppMessage() {
      let userId = wepy.getStorageSync('userId')
      return {
        title: api.shareInfo.title,
        path: `/pages/write/index?fromUID=${userId}`,
        imageUrl: api.shareInfo.imageUrl
      }
    };
  }
</script>

<style lang="less">

  .typechoose{
    margin: 40rpx;
    background-color: white;
    height: 24vh;
    border: 2px #1562B3 dashed;
  }

  .typechoose:after{
    border: none;
  }

  .typename{
    font-size: 48rpx;
    font-weight: bold;
    margin-top: 0;
    color: #052B53;
  }

  .typeprice{
    font-size: 30rpx;
    margin-top: -2vh;
    color:  #FF4A19;
  }

  .typenote{
    font-size: 34rpx;
    margin-top: 1.6vh;
  }
</style>
