<template>
  <view>
    <img src="{{ thumbnailUrl }}">

    <block wx:if="{{ fee !== 0}}">
      <view>您需支付 {{ fee }} 点券</view>
      <view>余额 {{ balance }} 点券</view>
    </block>
    <block wx:else>
      预览您要寄出的信
    </block>

    <form report-submit="True" @submit="bindBackForm">
      <button formType="submit">返回并修改</button>
    </form>

    <block wx:if="{{ fee !== 0}}">
      <block wx:if="{{ balance >= fee }}">
        <form report-submit="True" @submit="bindNoSenseForm">
          <button formType="submit">确认支付并继续</button>
        </form>
      </block>
      <block wx:else>
        <form report-submit="True" @submit="bindNoSenseForm">
          <button formType="submit">充值并继续</button>
        </form>
      </block>
    </block>
    <block wx:else>
      <form report-submit="True" @submit="bindPayFreeForm">
        <button formType="submit">确认并继续</button>
      </form>
    </block>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'

  export default class extends wepy.page {
    /**
     * 页面配置对象，对应于原生的 page.json 文件
     */
    config = {
      navigationBarTitleText: '信封预览'
    }

    /**
     * 页面渲染数据对象，存放可用于页面模板绑定的渲染数据
     */
    data = {
      thumbnailUrl: '',
      fee: 0,
      balance: 0
    }

    /**
     * wxml 事件处理函数对象，存放响应 wxml 中所捕获到的事件的函数，如 bindtap、bindchange
     */
    methods = {
      bindNoSenseForm(e) {
        api.formIdSubmit(e.detail.formId)
      },
      bindBackForm(e) {
        api.formIdSubmit(e.detail.formId)
        wepy.navigateBack()
      },
      async bindPayFreeForm(e) {
      }
    }

    /**
     * WePY组件事件处理函数对象，存放响应组件之间通过 broadcast、emit、invoke所传递的事件的函数
     */
    events = {}

    /**
     * 生命周期函数--监听页面加载（一个页面只会调用一次）
     */
    async onLoad() {
      console.log(this.$parent.globalData.currentLetter)
      this.fee = this.$parent.globalData.currentLetter.fee
      this.balance = this.$parent.globalData.currentLetter.balance
    };

    /**
     * 生命周期函数--监听页面显示（每次打开页面都会调用一次）
     */
    async onShow() {
    };

    /**
     * 生命周期函数--监听页面初次渲染完成
     * 页面初次渲染完成 —— 一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互
     */
    async onReady() {
    };

    /**
     * 生命周期函数--监听页面隐藏（当 navigateTo 或底部 tab 切换时调用）
     */
    async onHide() {
    };

    /**
     * 生命周期函数--监听页面卸载（当 redirectTo 或 navigateBack 的时候调用）
     */
    async onUnload() {
    };

    /**
     * 页面相关事件处理函数--监听用户下拉动作
     */
    async onPullDownRefresh() {
    };

    /**
     * 页面上拉触底事件的处理函数
     */
    async onReachBottom() {
    };

    /**
     * 用户点击右上角分享
     */
    async onShareAppMessage() {
    };
  }
</script>

<style lang="less">

</style>
