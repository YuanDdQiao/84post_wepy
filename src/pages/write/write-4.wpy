<template>
  <indicator status="2" right="4"></indicator>
  <view class="more-space">
    <view class="envelop">
      <image class="envelopepreview" src="{{ thumbnailUrl }}"></image>
    </view>

    <view class="uber paymentwindow">
      <view class="title">您的信件已经准备好！</view>
      <view class="note">提示：确认支付后您将无法再次阅读信件内容</view>

      <view class="texts">
        <view class="current">
          <view>当前余额</view>
          <view>{{ balance }} 点券</view>
        </view>
        <view class="after" wx:if="{{ balance >= fee }}">
          <view>支付后余额</view>
          <view>{{ balance-fee }} 点券</view>
        </view>
        <view class="fee">
          <view>信件费用</view>
          <view>{{ fee }}点券</view>
        </view>
      </view>

      <view class="buttons">
        <form report-submit="True" @submit="bindBackForm">
          <button class="btn btn-md btn-inline btn-back" formType="submit">返回修改</button>
        </form>

        <form report-submit="True" @submit="bindPayForm">
          <button class="btn btn-primary btn-md btn-inline" formType="submit">
            <text wx:if="{{ balance >= fee }}">支付并寄出</text>
            <text wx:else>充值并继续</text>
          </button>
        </form>
      </view>
    </view>


  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'
  import Indicator from '@/components/indicator'

  export default class extends wepy.page {
    /**
     * 页面配置对象，对应于原生的 page.json 文件
     */
    config = {
      navigationBarTitleText: '预览并寄出'
    }

    components = {
      indicator: Indicator
    }

    /**
     * 页面渲染数据对象，存放可用于页面模板绑定的渲染数据
     */
    data = {
      thumbnailUrl: '',
      fee: 0,
      balance: 0,
      uuid: ''
    }

    /**
     * wxml 事件处理函数对象，存放响应 wxml 中所捕获到的事件的函数，如 bindtap、bindchange
     */
    methods = {
      bindNoSenseForm(e) {
        api.formIdSubmit(e.detail.formId)
      },
      bindBackForm(e) {
        api.formIdSubmit(e.detail.formId)
        wepy.navigateBack()
      },
      async bindPayForm(e) {
        api.formIdSubmit(e.detail.formId)
        // 需要充值
        if (this.balance < this.fee) {
          wepy.navigateTo({ url: '/pages/my/recharge' })
          return
        }
        // 需要付费
        if (this.fee !== 0) {
          let s = await wepy.showModal({
            title: '支付确认？',
            content: `您将支付 ${this.fee} 点券`,
            confirmText: '确认',
            cancelText: '取消'
          })
          if (s.cancel) { // 取消
            return
          }
        }
        // 支付
        let res = await api.request(`letter/submit/confirm/${this.uuid}/`)
        if (res.data.status >= 0) {
          wepy.reLaunch({ url: 'write-5' })
        } else {
          let m = wepy.showModal({
            title: '余额不足',
            content: '请返回重新选择信件种类或充值后继续',
            confirmText: '重试',
            cancelText: '充值'
          })
          if (m.cancel) { // 充值
            wepy.navigateTo({ url: '/pages/my/recharge' })
          }
        }
      }
    }

    /**
     * WePY组件事件处理函数对象，存放响应组件之间通过 broadcast、emit、invoke所传递的事件的函数
     */
    events = {}

    /**
     * 生命周期函数--监听页面加载（一个页面只会调用一次）
     */
    async onLoad() {
    };

    /**
     * 生命周期函数--监听页面显示（每次打开页面都会调用一次）
     */
    async onShow() {
      console.log(this.$parent.globalData.currentLetter)
      this.id = this.$parent.globalData.currentLetter.id
      this.uuid = this.$parent.globalData.currentLetter.uuid

      let r = await api.request(`letter/submit/retry/${this.uuid}/`)
      this.fee = r.data.fee
      this.balance = r.data.balance
      this.$apply()

      let res = await api.request(`letter/thumbnail/${this.uuid}/`)
      this.thumbnailUrl = res.data.url
      this.$apply()
    };

    /**
     * 生命周期函数--监听页面初次渲染完成
     * 页面初次渲染完成 —— 一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互
     */
    async onReady() {
    };

    /**
     * 生命周期函数--监听页面隐藏（当 navigateTo 或底部 tab 切换时调用）
     */
    async onHide() {
    };

    /**
     * 生命周期函数--监听页面卸载（当 redirectTo 或 navigateBack 的时候调用）
     */
    async onUnload() {
    };

    /**
     * 页面相关事件处理函数--监听用户下拉动作
     */
    async onPullDownRefresh() {
    };

    /**
     * 页面上拉触底事件的处理函数
     */
    async onReachBottom() {
    };

    /**
     * 用户点击右上角分享
     */
    onShareAppMessage() {
      let userId = wepy.getStorageSync('userId')
      return {
        title: api.shareInfo.title,
        path: `/pages/write/index?fromUID=${userId}`,
        imageUrl: api.shareInfo.imageUrl
      }
    };
  }
</script>

<style lang="less">

  .previewnote {
    display: block;
    font-size: ~"32rpx";
    text-align: center;
    margin-top: ~"40rpx";
  }

  .buttons {
    margin-top: 5vh;
    margin-bottom: 5vh;
    text-align: center;

    .btn-back {
      margin-right: ~"26rpx";
    }
  }

  .texts {
    display: flex;
    flex-direction: column;
    align-items: center;

    .current,
    .after,
    .fee {
      display: flex;
      flex-direction: row;
      align-items: center;
      margin-bottom: ~"4rpx";

      width: ~"632rpx";

      view {
        font-size: ~"32rpx";
        line-height: 1.5;

        &:last-child {
          flex-grow: 1;
          text-align: right;
        }
      }
    }

    .fee {
      view {
        font-size: ~"38rpx";
        line-height: 1.5;
        margin-top: ~"20rpx";
      }
    }
  }

  .envelop {
    /*width: ~"750rpx";*/
    /*height: 46vh;*/

    margin-left: ~"-60rpx";
    margin-right: ~"-60rpx";
    margin-top: ~"80rpx";

    .envelopepreview {
      width: ~"656rpx";
      height: ~"392rpx";

      margin: calc(~"(46vh - 460rpx) / 2") auto;

      text-align: center;
      box-shadow: 0 4px 10px 0 rgba(160, 147, 105, 0.3);
      transform: rotate(-6deg);
    }
  }

  .gray {
    color: gray;
  }

  .paymentwindow {
    position: fixed;
    width: 100vw;
    bottom: 0;
    left: 0;
    border-radius: 0 !important;
    border-top: 1px solid #DCDCDC;
    border-left: 0;
    border-right: 0;
    box-shadow: 0 -2px 4px 0 rgba(225, 225, 225, 0.50);

    .title {
      font-size: ~"40rpx";
      margin-top: ~"60rpx";
      margin-bottom: ~"14rpx";
    }

    .note {
      font-size: ~"24rpx";
      margin-bottom: ~"60rpx";
    }
  }

</style>
