<template>
  <indicator status="3"></indicator>
  <view class="more-space">

    <view>
      <image class="pathpreview" src="{{ roadThumb }}"></image>
    </view>

    <view class="noteholder">
      <view class="bignote">您的信件已经寄出！</view>
    </view>


    <view class="texts">
      <view wx:if="{{ letterType.can_track }}">
        <view>运单号</view>
        <view>{{ expressNumber }}</view>
      </view>
      <view>
        <view>目的地</view>
        <view>{{ toAddress }}</view>
      </view>
      <view>
        <view>预计到达时间</view>
        <view>{{15 - 4 * letterType.speed_rank}} 天内</view>
      </view>
    </view>

    <block wx:if="{{ letterType.can_track }}">
      <view class="buttons">
        <button class="btn btn-md btn-left" open-type="share">分享给收信人</button>

        <form report-submit="True" @submit="bindTrack">
          <button class="btn btn-md" formType="submit">查看物流</button>
        </form>
      </view>


      <form report-submit="True" @submit="bindGoBack">
        <button class="btn btn-primary btn-lg" formType="submit">完成</button>
      </form>
    </block>
    <block wx:else>
      <view class="buttons">
        <button class="btn btn-md btn-left" open-type="share">分享给收信人</button>
        <form report-submit="True" @submit="bindGoBack">
          <button class="btn btn-primary btn-md" formType="submit">完成</button>
        </form>
      </view>
    </block>


  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'
  import Indicator from '@/components/indicator'

  export default class extends wepy.page {
    /**
     * 页面配置对象，对应于原生的 page.json 文件
     */
    config = {
      navigationBarTitleText: '已寄出'
    }

    components = {
      indicator: Indicator
    }

    /**
     * 页面渲染数据对象，存放可用于页面模板绑定的渲染数据
     */
    data = {
      roadThumb: '',
      letterType: {},
      toAddress: '',
      expressNumber: ''
    }

    /**
     * wxml 事件处理函数对象，存放响应 wxml 中所捕获到的事件的函数，如 bindtap、bindchange
     */
    methods = {
      bindGoBack(e) {
        api.formIdSubmit(e.detail.formId)
        wepy.reLaunch({ url: 'index' })
      },
      bindTrack(e) {
        api.formIdSubmit(e.detail.formId)
        wepy.navigateTo({ url: `/pages/complex/express?q=${this.expressNumber}` })
      }
    }

    /**
     * WePY组件事件处理函数对象，存放响应组件之间通过 broadcast、emit、invoke所传递的事件的函数
     */
    events = {}

    /**
     * 生命周期函数--监听页面加载（一个页面只会调用一次）
     */
    async onLoad() {
      this.id = this.$parent.globalData.currentLetter.id
      this.uuid = this.$parent.globalData.currentLetter.uuid
      this.getRoadThumb()
      this.getLetterType()
    };

    /**
     * 生命周期函数--监听页面显示（每次打开页面都会调用一次）
     */
    async onShow() {
    };

    /**
     * 生命周期函数--监听页面卸载（当 redirectTo 或 navigateBack 的时候调用）
     */
    async onUnload() {
      this.$parent.globalData.currentLetter = {}
      this.$parent.globalData.letterInfo = {}
      console.log(this.$parent.globalData)

      wepy.removeStorageSync('letterInfo-paperType')
      wepy.removeStorageSync('letterContent')
      wepy.removeStorageSync('letterSign')
      wepy.removeStorageSync('letterInfo-shiftInfo-toName')
      wepy.removeStorageSync('letterInfo-shiftInfo-toTel')
      wepy.removeStorageSync('letterInfo-shiftInfo-toAddress')
      wepy.removeStorageSync('letterInfo-shiftInfo-toZip')
      wepy.removeStorageSync('letterInfo-shiftInfo-fromName')
      wepy.removeStorageSync('letterInfo-shiftInfo-fromTel')
      wepy.removeStorageSync('letterInfo-shiftInfo-fromAddress')
      wepy.removeStorageSync('letterInfo-shiftInfo-fromZip')
      wepy.removeStorageSync('letterInfo-letterStamp')
    };

    /**
     * 用户点击右上角分享
     */
    onShareAppMessage() {
      let userId = wepy.getStorageSync('userId')
      let path = `/pages/write/index?fromUID=${userId}`
      if (!this.letterType.can_track) {
        path = `/pages/complex/normal?fromUID=${userId}`
      } else {
        path = `/pages/complex/express?fromUID=${userId}&q=${this.expressNumber}`
      }
      return {
        title: '我给你写了一封信，请查收～',
        path: path,
        imageUrl: api.shareInfo.imageUrl
      }
    };

    async getLetterType() {
      let r = await api.request(`letter/type/${this.id}/`)
      console.log('type', r)
      this.letterType = r.data
      this.$apply()

      if (this.letterType.can_track) {
        // 获取运单号
        r = await api.request(`letter/express/${this.uuid}`)
        console.log('express', r)
        this.expressNumber = r.data.express_number
        this.$apply()
      }
    }

    async getRoadThumb() {
      let r = await api.request(`letter/roadthumb/${this.id}/`)
      this.roadThumb = r.data.url
      this.$apply()

      r = await api.request(`letter/to_address/${this.uuid}/`)
      this.toAddress = r.data.address
      this.$apply()
    }
  }
</script>

<style lang="less">

  @import "../../colors";


  .texts {
    display: flex;
    flex-direction: column;
    align-items: center;

    & > view {
      display: flex;
      flex-direction: row;
      align-items: center;

      width: ~"632rpx";

      & > view {
        font-size: ~"34rpx";
        line-height: 2;

        &:last-child {
          flex-grow: 1;
          text-align: right;
        }
      }
    }
  }

  .buttons {
    text-align: justify;
    display: flex;
    flex-direction: row;
    align-items: center;
    position:absolute;
    bottom:60rpx;


    .btn-left {
      margin-right: ~"24rpx";
    }
  }

  .btn {
    margin-top: 3vh;
  }

  .pathpreview {
    margin: ~"92rpx" auto 0;
    width: ~"630rpx";
    height: ~"376rpx";
  }

  .bignote {
    margin-bottom: 5vh;
    font-size: ~"42rpx";
    color: #1562B3;
    text-align: center;
    margin-top: 5vh;

  }

  .note {
    margin-bottom: 2vh;
    font-size: ~"34rpx";
    color: #1562B3;
    float: left;

  }

  .infoholder {
    margin-left: ~"40rpx";
    margin-right: ~"40rpx";
    width: ~"670rpx";
    height: 14vh;
    margin-bottom: 1vh;

  }

  .timeholder {
    margin-left: ~"40rpx";
    margin-right: ~"40rpx";
    margin-top: ~"40rpx";
    width: ~"670rpx";
    height: 12vh;
  }

  .functionbutton {
    font-size: ~"32rpx";
    margin-top: 0;
    float: right;
    width: ~"186rpx";
    display: flex;
    background-color: #1562B3;
    padding: 0;
    justify-content: space-around;
    flex-direction: column;
    height: ~"72rpx";
    color: #FAF9F6;

  }

  .functionbutton:after {
    border: none;
  }

  .confirmbutton {

    position: absolute;
    bottom: 6vh;
    margin-left: 20vw;
    margin-right: 20vw;

  }

  .wholepage {
    height: 100vh
  }

  .normal {
    text-align: center;
    float: none;

  }

  .notice {
    color: red;
    display: inline;
    font-size: ~"30rpx";

  }

  .sharebutton {
    color: white;
    background-color: #F17250;
    margin-left: 20vw;
    margin-right: 20vw;
    position: absolute;
    bottom: 15vh;
  }

</style>
