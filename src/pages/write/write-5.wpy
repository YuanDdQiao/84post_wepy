<template>
  <view>
    <view>
      <view>写</view>
      <view>选</view>
      <view>寄</view>
    </view>


    <view>
      <image src="{{ roadThumb }}"></image>
    </view>


    <block wx:if="{{letterTypeType === 0}}">
      <view>
        <view>您的邮件（平邮）已寄出！</view>
        <view>目的地：{{ toAddress }}</view>
      </view>
    </block>
    <block wx:elif="{{letterTypeType === 1}}">
      <view>
        <view>您的挂号信已寄出！</view>
        <view>运单号：{{ expressNumber }}</view>
        <form report-submit="True" @submit="bindNoSenseForm">
          <button formType="submit">追踪信件</button>
        </form>
        <view>预计到达时间：3 - 7 天</view>
        <view>目的地：{{ toAddress }}</view>
      </view>
    </block>
    <block wx:else>
      <view>
        <view>您的快递已寄出！</view>
        <view>运单号：{{ expressNumber }}</view>
        <form report-submit="True" @submit="bindNoSenseForm">
          <button formType="submit">追踪信件</button>
        </form>
        <view>预计到达时间：1 - 3 天</view>
        <view>目的地：{{ toAddress }}</view>
      </view>
    </block>

    <button open-type="share">告诉别人</button>
    <form report-submit="True" @submit="bindGoBack">
      <button formType="submit">返回</button>
    </form>
    <!--<form report-submit="True" @submit="bindNoSenseForm">-->
    <!--<button formType="submit">预览信件</button>-->
    <!--</form>-->

  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'

  export default class extends wepy.page {
    /**
     * 页面配置对象，对应于原生的 page.json 文件
     */
    config = {
      navigationBarTitleText: '已寄出'
    }

    /**
     * 页面渲染数据对象，存放可用于页面模板绑定的渲染数据
     */
    data = {
      roadThumb: '',
      letterTypeType: 0,
      toAddress: '',
      expressNumber: ''
    }

    /**
     * wxml 事件处理函数对象，存放响应 wxml 中所捕获到的事件的函数，如 bindtap、bindchange
     */
    methods = {
      bindNoSenseForm(e) {
        api.formIdSubmit(e.detail.formId)
      },
      bindGoBack(e) {
        wepy.reLaunch({ url: 'index' })
      }
    }

    /**
     * WePY组件事件处理函数对象，存放响应组件之间通过 broadcast、emit、invoke所传递的事件的函数
     */
    events = {}

    /**
     * 生命周期函数--监听页面加载（一个页面只会调用一次）
     */
    async onLoad() {
      let id = this.$parent.globalData.currentLetter.id
      let uuid = this.$parent.globalData.currentLetter.uuid
      api.request(`letter/roadthumb/${id}/`).then(
        r => {
          this.roadThumb = r.data.url
          this.$apply()
          return api.request(`letter/to_address/${uuid}/`)
        }
      ).then(
        r => {
          this.toAddress = r.data.address
          this.$apply()
        }
      )
      api.request(`letter/type/${uuid}/`).then(
        r => {
          this.letterTypeType = r.data.paper_type
          this.$apply()
        }
      )

      api.request(`letter/express/${uuid}`).then(
        r => {
          this.expressNumber = r.data.express_number
          this.$apply()
        }
      )
    };

    /**
     * 生命周期函数--监听页面显示（每次打开页面都会调用一次）
     */
    async onShow() {
    };

    /**
     * 生命周期函数--监听页面初次渲染完成
     * 页面初次渲染完成 —— 一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互
     */
    async onReady() {
    };

    /**
     * 生命周期函数--监听页面隐藏（当 navigateTo 或底部 tab 切换时调用）
     */
    async onHide() {
    };

    /**
     * 生命周期函数--监听页面卸载（当 redirectTo 或 navigateBack 的时候调用）
     */
    async onUnload() {
      this.$parent.globalData.currentLetter = {}
      this.$parent.globalData.letterInfo = {}
      // console.log(this.$parent.globalData)
      wepy.clearStorageSync()
      api.login()
    };

    /**
     * 页面相关事件处理函数--监听用户下拉动作
     */
    async onPullDownRefresh() {
    };

    /**
     * 页面上拉触底事件的处理函数
     */
    async onReachBottom() {
    };

    /**
     * 用户点击右上角分享
     */
    onShareAppMessage() {
      console.log('onShareAppMessage')
      let userId = wepy.getStorageSync('userId')
      let uuid = this.$parent.globalData.currentLetter.uuid
      let imageUrl = `${api.host}/media/thumbnails/${uuid}.png`
      console.log(imageUrl)
      return {
        path: `/pages/write/index?fromUID=${userId}`, // TODO: auto view
        imageUrl: imageUrl
      }
    };
  }
</script>

<style lang="less">

</style>
