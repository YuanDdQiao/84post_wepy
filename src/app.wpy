<style lang="less">
  @import "colors";
  @import "images";

  page {
    width: ~"660rpx";
    min-height: calc(~"100% - 90rpx");
    padding: ~"45rpx";

    color: @text-color;
    font-size: ~"28rpx";
    letter-spacing: 0;

    background: url(@bg) no-repeat center center;
    background-size: cover;

    & > view.more-space {
      margin: ~"15rpx";
    }
  }

  view {
    margin: 0;
    padding: 0;
  }

  button.btn {
    height: ~"92rpx";

    font-size: ~"36rpx";
    letter-spacing: 0;

    &::after {
      border: none;
    }

    /*展示样式*/

    &.btn-block {
      display: block;
    }

    &.btn-inline {
      display: inline-block;
    }

    /*按钮尺寸*/

    &.btn-sm {
      width: ~"192rpx";
    }

    &,
    &.btn-md {
      width: ~"300rpx";
    }

    &.btn-lg {
      width: ~"624rpx";
    }

    /*按钮类别（颜色）*/

    & {
      background-image: linear-gradient(-180deg, #FCFCFC 0%, #F9F9F9 100%);
      border: 1px solid #E5E5E5;
      box-shadow: 0 0 4px 2px rgba(255, 255, 255, 0.33);
      color: @text-color;
    }

    &.btn-primary {
      background-image: linear-gradient(-180deg, #FF8B6C 0%, #F17250 100%);
      border: 1px solid #E7795C;
      box-shadow: 0 1px 3px 0 rgba(117, 117, 117, 0.29);
      color: white;
    }
  }

  .text-center {
    text-align: center;
  }

  .title {
    font-size: ~"40rpx";
    color: @text-color;
  }

  .note {
    font-size: ~"24rpx";
    color: @weak-text-color;
  }

  .uber {
    /*底板*/
    background-image: linear-gradient(-180deg, #FBFBFB 0%, #F9F9F9 100%);
    border: 1px solid #DCDCDC;
    box-shadow: 0 2px 4px 0 rgba(225, 225, 225, 0.50);
    border-radius: 6px;
  }

  .paper {
    /* 纸 */
    background: #FFFFFF;
    box-shadow: 0 2px 4px 0 #D4CEBE;
  }

  .indicator {
    /* 进度指示 + 筛选器 */
    background: #FDFDFD;
    box-shadow: 0 2px 4px 0 rgba(205, 205, 205, 0.50);
  }

  /*legacy*/

  .container {
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
  }

  .processbarholder {
    position: fixed;
    width: 100vw;
    height: ~"70rpx";
    background-color: #09427F;
    font-size: ~"26rpx";
    color: rgba(255, 255, 255, 0.3);
    top: 0;
    z-index: 100;

  }

  .progress {
    width: 33vw;
    height: ~"70rpx";
    float: left;
    text-align: center;
    padding-top: ~"18rpx";
    border-top: 2px dashed rgba(255, 255, 255, 0.3);
  }

  .progress-middle {
    width: 34vw;
    height: ~"70rpx";
    float: left;
    text-align: center;
    padding-top: ~"18rpx";
    border-top: 2px dashed rgba(255, 255, 255, 0.3);
  }

  .processdone {
    border-top: 2px solid white;
    color: white;
  }

  .nomore {
    text-align: center;
    font-size: ~"30rpx";
    color: gray;
    margin-top: 10vh;
    height: 14vh;
  }
</style>

<script>
  import wepy from 'wepy'
  import 'wepy-async-function'
  import api from '@/utils/api'

  export default class extends wepy.app {
    config = {
      pages: [
        'pages/index',
        'pages/write/index',
        'pages/write/write-1',
        'pages/write/write-2',
        'pages/write/write-3',
        'pages/write/write-4',
        'pages/write/write-5',
        'pages/box/index',
        'pages/box/box1-1',
        'pages/box/box1-2',
        'pages/box/box-2',
        'pages/box/box-3',
        'pages/my/index',
        'pages/my/list',
        'pages/my/read',
        'pages/my/query',
        'pages/my/express',
        'pages/my/recharge',
        'pages/complex/normal'
      ],
      window: {
        backgroundTextStyle: 'light',
        navigationBarBackgroundColor: '#0D55A1',
        navigationBarTitleText: '84号邮局',
        navigationBarTextStyle: 'white',
        backgroundColor: '#FAF9F6'
      },
      networkTimeout: {
        request: 60000
      },
      debug: true
    }

    globalData = {
      userInfo: null,
      letterInfo: {},
      pickUp: {},
      writeIndexError: ''
    }

    constructor() {
      super()
      this.use('requestfix')
      this.use('promisify')
    }

    async onLaunch() {
      await api.login()
      await api.qiandao()
    }
  }
</script>
