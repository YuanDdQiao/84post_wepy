<style lang="less">
  .container {
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
  }
</style>

<script>
  import wepy from 'wepy'
  import 'wepy-async-function'
  import api from '@/utils/api'

  import { setStore } from 'wepy-redux'
  import configStore from './store'

  const store = configStore()
  setStore(store)

  export default class extends wepy.app {
    config = {
      pages: [
        // 'pages/index',
        'pages/write/index',
        'pages/write/write-1',
        'pages/write/write-2',
        'pages/write/write-3',
        'pages/write/write-4',
        'pages/write/write-5',
        'pages/box/index',
        'pages/box/box1-1',
        'pages/box/box1-2',
        'pages/my/index',
        'pages/my/recharge'
      ],
      window: {
        backgroundTextStyle: 'light',
        navigationBarBackgroundColor: '#fff',
        navigationBarTitleText: '84号邮局',
        navigationBarTextStyle: 'black'
      },
      tabBar: {
        list: [{
          pagePath: 'pages/write/index',
          text: '写信'
          // iconPath: 'images/index.png',
          // selectedIconPath: 'images/index_selected.png'
        }, {
          pagePath: 'pages/box/index',
          text: '信箱'
          // iconPath: 'images/user.png',
          // selectedIconPath: 'images/user_selected.png'
        }, {
          pagePath: 'pages/my/index',
          text: '我的'
          // iconPath: 'images/user.png',
          // selectedIconPath: 'images/user_selected.png'
        }],
        color: '#707070',
        selectedColor: '#00b5ad'
      },
      networkTimeout: {
        request: 5000
      },
      debug: true
    }

    globalData = {
      userInfo: null,
      letterInfo: {},
      writeIndexError: ''
    }

    constructor() {
      super()
      this.use('requestfix')
      this.use('promisify')
    }

    onLaunch() {
      // wepy.login().then(res => {
      //   // console.log('login:', res)
      // })
      api.login()
      // this.testAsync()
    }

    sleep(s) {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          resolve('promise resolved')
        }, s * 1000)
      })
    }

    async testAsync() {
      // const data = await this.sleep(3)
      // console.log(data)
    }

    getUserInfo(cb) {
      const that = this
      if (this.globalData.userInfo) {
        return this.globalData.userInfo
      }
      wepy.getUserInfo({
        success(res) {
          that.globalData.userInfo = res.userInfo
          cb && cb(res.userInfo)
        }
      })
    }
  }
</script>
